% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coxtv.base.R
\name{coxtv}
\alias{coxtv}
\title{fit a Cox non-proportional hazards model.}
\usage{
coxtv(
  event,
  z,
  time,
  strata = NULL,
  spline = "P-spline",
  nsplines = 8,
  ties = "Breslow",
  control,
  ...
)
}
\arguments{
\item{event}{failure events response variable of length \code{nobs}, where \code{nobs} denotes the number of observations. It should be a vector containing 0 or 1}

\item{z}{input covariate matrix, with \code{nobs} rows and \code{nvars} columns; each row is an observation vector.}

\item{time}{observed event time, should be a vector with non-negative numeric values.}

\item{strata}{stratification group defined in the data used for the stratified model.
If there exists a stratification group, please enter it as a vector.
By default, a non-stratified model would be implemented.}

\item{nsplines}{number of basis functions in the B-splines to span the time-varying effects, the default value is 8.
We use the r function \code{splines::bs} to generate the B-splines.}

\item{ties}{a character string specifying the method for tie handling. If there are no tied
death times, the methods are equivalent.  By default \code{"Breslow"} uses the Breslow approximation, which can be faster when many ties occur.}

\item{knots}{the internal knot locations (breakpoints) that define the B-splines.
The number of the internal knots should be \code{nsplines}-\code{degree}-1.
If \code{NULL}, the locations of knots are chosen to include an equal number of events within each time interval. This choice leads to more stable results in most cases.
Users can specify the internal knot locations by themselves.}

\item{degree}{degree of the piecewise polynomial for generating the B-spline basis functions---default is 3 for cubic splines.
\code{degree = 2} results in the quadratic B-spline basis functions.}

\item{stop}{a character string specifying the stopping rule to determine convergence. Use \eqn{loglik(m)} to denote the log-partial likelihood at iteration step m.
\code{"incre"} means we stop the algorithm when Newton's increment is less than the \code{tol}.
\code{"relch"} means we stop the algorithm when the \eqn{loglik(m)} divided by the  \eqn{loglik(0)} is less than the \code{tol}.
\code{"ratch"} means we stop the algorithm when \eqn{(loglik(m)-loglik(m-1))/(loglik(m)-loglik(0))} is less than the \code{tol}.
\code{"all"} means we stop the algorithm when all the stopping rules \code{"incre"}, \code{"relch"} and \code{"ratch"} is met.
Default value is \code{ratch}. If the maximum iteration steps \code{iter.max} is achieved, the algorithm stops before the stopping rule is met.}

\item{tol}{convergence threshold for Newton's method. The algorithm continues until the method selected using \code{stop} converges.
The default value is  \code{1e-6}.}

\item{iter.max}{maximum Iteration number if the stopping criteria specified by \code{stop} is not satisfied. Default value is  20.}

\item{method}{a character string specifying whether to use Newton's method or Proximal Newton's method.  If \code{"Newton"} then exact hessian is used,
while default method \code{"ProxN"} implementing the proximal method which can be faster and more stable when there exists ill-conditioned second-order information of the log-partial likelihood.
See details in Wu et al. (2022).}

\item{gamma}{parameter for Proximal Newton's Method \code{"ProxN"}. Default value is \code{1e8}.}

\item{btr}{a character string specifying the backtracking line-search approach. \code{"dynamic"} is a typical way to perform backtracking line-search. See details in Convex Optimization by Boyd and Vandenberghe (2009).
\code{"static"} limits Newton's increment and can achieve more stable results in some extreme cases, such as ill-conditioned second-order information of the log-partial likelihood,
which usually occurs when some predictors are categorical with low frequency for some categories.
Users should be careful with \code{static} as this may lead to under-fitting.}

\item{tau}{a scalar in (0,1) used to control the step size inside the backtracking line-search. The default value is 0.5.}

\item{parallel}{if \code{TRUE}, then the parallel computation is enabled. The number of threads in use is determined by \code{threads}.}

\item{threads}{an integer indicating the number of threads to be used for parallel computation. Default is \code{2}. If \code{parallel} is false, then the value of \code{threads} has no effect.}

\item{fixedstep}{if \code{TRUE}, the algorithm will be forced to run \code{iter.max} steps regardless of the stopping criterion specified.}
}
\value{
An object with S3 class \code{"coxtv"}.
\item{call}{the call that produced this object.}
\item{beta}{the estimated time varying coefficient for each predictor at each unique time. It is a matrix of dimension \code{len_unique_t} x \code{nvars}, where \code{len_unique_t} is the length of unique follow-up \code{time}.
Each row represents the coefficients at the corresponding input observation time.}

\item{bases}{the basis matrix used in model fitting. If \code{ties="None"}, the dimension of the basis matrix is \code{nvars}-by-\code{nsplines};
if \code{ties="Breslow"}, the dimension is \code{len_unique_t}-by-\code{nsplines}. The matrix is constructed using \code{bs::splines} function.}
\item{ctrl.pts}{estimated coefficient of the basis matrix of dimension \code{nvars}-by-\code{nsplines}.
Each row represents a covariate's coefficient on the \code{nsplines} dimensional basis functions.}
\item{Hessian}{the Hessian matrix of the log-partial likelihood, of which the dimension is \code{nsplines * nvars}-by-\code{nsplines * nvars}.}
\item{internal.knots}{the internal knot locations of the basis functions. The locations of knots are chosen to include an equal number of events within each time interval.}
\item{nobs}{number of observations.}
\item{theta.list}{a list of \code{ctrl.pts} of length \code{m}, contains the updated \code{ctrl.pts} after each algorithm iteration.}
\item{VarianceMatrix}{the variance matrix of the estimated coefficients of the basis matrix, which is the inverse of the negative \code{Hessian} matrix.}
}
\description{
Fit a Cox non-proportional hazards model via maximum likelihood.
}
\details{
The model is fit by Newton's method (Proximal Newton's method).
}
\examples{
data(ExampleData)
z <- ExampleData$x
time <- ExampleData$time
event <- ExampleData$event
fit <- coxtv(event = event, z = z, time = time)

}
\references{
Gray, Robert J. (1992) Flexible methods for analyzing survival data using splines, with applications to breast cancer prognosis.
\emph{Journal of the American Statistical Association}, \strong{87}: 942-951.

Gray, Robert J. (1994) Spline-based tests in survival analysis.
\emph{Biometrics}, \strong{50}: 640-652.
\cr

Lingfeng Luo, Kevin He, Wenbo Wu and Jeremy M.G. Taylor. (2022) Using information criteria to select smoothing parameters when analyzing survival data with time-varying coefficient hazard models.
\cr

Wenbo Wu, Jeremy M.G. Taylor, Andrew F Brouwer, Lingfeng Luo, Jian Kang, Hui Jiang and Kevin He. (2022) Scalable proximal methods for cause-specific hazard modeling with time-varying coefficients
\emph{Lifetime Data Analysis}, \strong{28(2)}: 194-218.
\cr

Wood, Simon N. (2017) P-splines with derivative based penalties and tensor product smoothing of unevenly distributed data.
\emph{Statistics and Computing}, \strong{27(4)}: 985-989.

Perperoglou, Aris, Saskia le Cessie, and Hans C. van Houwelingen. (2006) A fast routine for fitting Cox models with time varying effects of the covariates.
\emph{Computer Methods and Programs in Biomedicine}, \strong{81(2)}: 154-161.
\cr
}
\seealso{
\code{coef}, \code{plot}, and the \code{coxtp} function.
}
