[{"path":[]},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"coxtp","dir":"Articles","previous_headings":"1. Functions","what":"1.1 coxtp:","title":"Model Parameters","text":"coxtp(event,z,time,strata=c(),spline=\"P-spline\", nsplines=8, ties=\"Breslow\",tol=1e-9, iter.max=20L, method=\"Newton\", lambda=1e8,factor=10, btr=\"dynamic\", sigma=1e-2, tau=0.6,stop=\"incre\", parallel=FALSE, threads=1L, degree=3L, TIC = FALSE, TIC_prox = FALSE, lambda_spline = 0, ord = 4, fixedstep = FALSE, effectsize = 0, difflambda = FALSE,addsecond = FALSE, penalizestop = FALSE, ICLastOnly = FALSE) main function package coxtp refers “Cox Non-proportional Hazards model penalization”.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"common-parameters","dir":"Articles","previous_headings":"1. Functions > 1.1 coxtp:","what":"1.1.1 Common Parameters","title":"Model Parameters","text":"coxtp function two required input, formula data. event: Event vector, vector containing 0 1 z: Covariate matrix time: Time vector, vector non-negative numeric value strata: stratification group defined data. exist stratification group, please enter vector.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"method-related-parameters","dir":"Articles","previous_headings":"1. Functions > 1.1 coxtp:","what":"1.1.2 Method related Parameters:","title":"Model Parameters","text":"offered model estimation penalization without penalization. Detail method found paper(add link ). Following parameters defines model settings: spline: spline term Penalized Newton’s Method(Add section Number related paper). Default setting spline=\"Smooth-spline\" \"P-spline\": P-splines low rank smoother using B-spline basis. Detail information P-spline found (Add section number link) \"Smooth-spline\" : (Add section number link) nsplines : Number base functions B-splines, default 8. method : Selecting Method used, default method=\"Newton\" \"Newton\": Usual Newton’s Approach. \"ProxN\" : Proximal Newton–Raphson Method proposed paper(get link ). lambda : Parameter Proximal Newton’s Method. Default lambda=1e8 tau : (Alpha beta?) Newton’s Method, Default tau=0.5. Used control step size. lambda_spline : Smoothing parameter lambda. Default lambda_spline = 0 refers Newton’s Method without penalization. degree: Degree smoothing spline. Default setting degree=3L. degree=2L refers Smoothing quadratic spline. degree=3L refers Smoothing cubic spline. ord : Specify derivative penalize. Default setting ord=4. ord=4: Penalized second order derivative, suggest use using smoothing cubic spline. ord=3: Penalized first order derivative, suggest use using smoothing quadratic spline. penalizestop: delete","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"stopping-creteria-related-parameters","dir":"Articles","previous_headings":"1. Functions","what":"1.1.3 Stopping creteria related Parameters:","title":"Model Parameters","text":"tol: Convergence threshold. default threshold set tol=1e-6 iter.max: Maximum Iteration number, default iter.max=20L incre: define \\((l^{(m)}-l^{(m-1)})/(l^{(m)}-l^{(0)})\\) relative change log-partial likelihood, m denotes mth step algorithm. ’s smaller certain threshold, stop algorithm. tol variable determining convergence threshold. relch: define relative change log-partial likelihood \\((l^{(m)}-l^{(m-1)})/(l^{(m)})\\), makes easier converge. incre: method stop algorithm half Newton increment less threshold(tol defined previous argument?? correct??). fixedstep: might times stopping criteria working, thus, number steps set manually. Default value fixedstep = FALSE, true, stop iter.max","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"other-parameters","dir":"Articles","previous_headings":"1. Functions > 1.1.3 Stopping creteria related Parameters:","what":"1.1.4 Other Parameters:","title":"Model Parameters","text":"\"Breslow\": Breslow approximation. Detailed information found (add link) \"none: Don’t deal ties \"none\": Don’t Backtracking Linesearch. \"static\" : binary predictors extremely low frequency present, calculation second order derivative issues. case, Newton increment presents extreme values, leading huge bias. provided way limiting step size cases. Instead using Newton increment, use fixed value 1. method referred “static” function. Since moves slower, usually can achieve maximum likelihood estimator, leading biased estimation. \"dynamic\" : Backtracking Linesearch Newton Increment. Detail information found (Add link) parallel: Parallel computation, Default parallel=FALSE threads : Parallel computation parameter(number cores)Default threads=1L TIC_prox : calculating information criteria, might numerical issue(second order derivative, Hessian matrix approximate singular), thus proposed add small term diagonal. Default TIC_prox = FALSE ICLastOnly : calculate last information criteria TRUE. Default ICLastOnly=FALSE","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"coxtp-plot","dir":"Articles","previous_headings":"1. Functions","what":"1.2. coxtp.plot","title":"Model Parameters","text":"coxtp.plot(fit,IC=\"AIC\",coef,xlab=\"Time\",ylab=\"Hazard Ratio (log-scale)\") Function coxtp.plot created generate related hazard ratio plot result generated coxtp fit: Model fitted coxtp IC=“TIC”: Takeuchi information criterion (Insert link ) IC=“GIC”: Generalized information criterion (Insert link ) IC=“AIC”: Akakia information criterion (Insert link ) coef: variable needed plotted xlab: X axis label, default xlab=“Time” ylab: X axis label, default ylab=“Hazard Ratio (log-scale)”","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"coxtp-baseline","dir":"Articles","previous_headings":"1. Functions","what":"1.3. coxtp.baseline","title":"Model Parameters","text":"coxtp.baseline(fit, delta,z,time,strata=c()) fit: Model fitted coxtp delta: Event vector, vector containing 0 1 z: Covariate matrix time: Time vector, vector non-negative numeric value. strata: stratification group defined data. exist stratification group, please enter vector.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"coxtp-predict","dir":"Articles","previous_headings":"1. Functions","what":"1.4 coxtp.predict","title":"Model Parameters","text":"coxtp.predict(fit,baseline,newdata=c(),strata=FALSE) fit: Model get coxtp baseline: Baseline estimation coxtp.baseline arbitary baseline entered newdata: New data vector strata: Whether stratification dataset, default FALSE.","code":""},{"path":[]},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"sim_data","dir":"Articles","previous_headings":"2. Data sets","what":"2.1 sim_data","title":"Model Parameters","text":"Example data surtvep 5000 observations 4 variables V1: Simulated covariate V1, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=1\\) V2: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=exp(-1.5*t)\\) event: Simulated event variable, Binary varible 0, 1 time: Simulated time variable, Continous variable non-negative value","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"sim_data_p5","dir":"Articles","previous_headings":"2. Data sets","what":"2.2 sim_data_p5","title":"Model Parameters","text":"Example data surtvep 5000 observations 7 variables: V1: Simulated covariate V1, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=1\\) V2: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=sin(3\\pi t/4)\\) V3: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=-1\\) V4: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=(t/3)**2exp(t/2)\\) V5: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=exp(-1.5t)\\) event: Simulated event variable, Binary varible 0, 1 } time: Simulated time variable, Continous variable non-negative value}","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/Model_Parameters.html","id":"sim_data_p5_f5","dir":"Articles","previous_headings":"2. Data sets","what":"2.3 sim_data_p5_f5","title":"Model Parameters","text":"Example data surtvep 5000 observations 8 variables(strata): V1: Simulated covariate V1, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=1\\) V2: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=sin(3\\pi t/4)\\) V3: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=-1\\) V4: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=(t/3)**2exp(t/2)\\) V5: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=exp(-1.5t)\\) event: Simulated event variable, Binary variable 0, 1 time: Simulated time variable, Continuous variable non-negative value facility: Simulated stratification variable. 5 levels","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/reference.html","id":"related-paper","dir":"Articles","previous_headings":"","what":"Related Paper:","title":"Reference","text":"insert paper link ","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/reference.html","id":"our-main-web","dir":"Articles","previous_headings":"","what":"Our main web","title":"Reference","text":"insert web link ","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction:","title":"Introduction to surtvep","text":"surtvep R package fitting penalized Newton’s method time-varying effects model using mAIC, TIC, GIC information criteria, particular span parameter using basis functions. Utilities carrying post-fitting visualization, summarization, inference also provided. tutorial introduce use surtvep example dataset.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation:","title":"Introduction to surtvep","text":"","code":"#Install the package, need to install the devtools packages: require(\"devtools\") require(\"remotes\") remotes::install_github(\"UM-KevinHe/surtvep\")  #To install with Vignettes: # install.packages(\"devtools\") # devtools::install_github(\"UM-KevinHe/surtvep\",build_vignettes =T)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick Start","title":"Introduction to surtvep","text":"purpose section give users general sense package. briefly go main functions, basic operations outputs. section, users may better idea functions available, ones use, least seek help. First, load ‘surtvep’ package: main functions used package Newton’s method ‘coxtv’ Newton’s method combined penalization ‘coxtp’, demonstrate section. load set data created beforehand illustration: command loads input covariate matrix ‘z’, time--event outcome ‘time’ ‘event’ saved R data archive. saved data set simulation data set continuous outcomes. fit Newton’s method without penalization use basic call ‘coxtv’. ‘fit.tv’ object class ‘coxtv’ contains relevant information fitted model use. encourage users extract components directly. Instead, various methods provided object plot test enable us execute tasks elegantly. can visualize time-varying coefficients executing plot method:  sub figure corresponds variable. shows time-varying effect predictors. ExampleData, first predictor constant effect 1, second predictor time-varying effect \\(\\text{sin}(3\\pi * t/4)\\), \\(t\\) time. dotted line indicates hazard ratio 0, means predictor effect. Users may also wish plot effect different covariates plot: can done setting allinone = TRUE plot command. Next fit Newton’s method combined penalization method. specify range penalization coefficients first, call coxtp function. Detailed disucussion specify range penalization coefficients choose appropriate one discussed section Information Criteria.  tools introduced far, users able fit time-varying model. many arguments package give users great deal flexibility. learn , move later section.","code":"library(\"surtvep\") data(\"ExampleData\") z     <- ExampleData$x time  <- ExampleData$time event <- ExampleData$event fit.tv <- coxtv(z = z, event = event, time=time) #> Iter 1: Obj fun = -3.2982771; Stopping crit = 2.8599513e-01; #> Iter 2: Obj fun = -3.2916285; Stopping crit = 6.4033714e-03; #> Iter 3: Obj fun = -3.2916034; Stopping crit = 2.5024973e-05; #> Iter 4: Obj fun = -3.2916034; Stopping crit = 5.6581492e-10; plot(fit.tv, ylim = c(-2,2)) lambda_all <- c(1) fit.penalize = coxtp(z = z, event = event, time=time, lambda_spline = lambda_all, method = \"ProxN\", btr = \"static\") #> Iter 1: Obj fun = -3.3017443; Stopping crit = 1.0000000e+00; #> Iter 2: Obj fun = -3.3068888; Stopping crit = 1.7435312e-02; #> Iter 3: Obj fun = -3.2954100; Stopping crit = 3.7446678e-02; #> Iter 4: Obj fun = -3.2953323; Stopping crit = 2.5346890e-04; #> Iter 5: Obj fun = -3.2953321; Stopping crit = 4.6097119e-07; #> Iter 6: Obj fun = -3.2953321; Stopping crit = 1.7713469e-12; plot(fit.penalize, IC = \"TIC\", ylim = c(-2,2))"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"newtons-method","dir":"Articles","previous_headings":"","what":"Newton’s method","title":"Introduction to surtvep","text":"section introduce Newton’s method estimating time-varying effects detail. Let \\(D_{}\\) denote time lag transplantation death \\(C_{}\\) censoring time patient \\(\\), \\(=1,\\ldots, n\\). \\(n_j\\) sample size. observed time \\(T_{} = \\min\\{D_{},C_{}\\}\\), death indicator given \\(\\delta_{} = (D_{} \\leq C_{})\\). Let \\(\\boldsymbol{X}_{}=(X_{i1}, \\ldots, X_{iP})^T\\) \\(P\\)-dimensional covariate vector. assume \\(D_{}\\) independent \\(C_{}\\) given \\(\\textbf{X}_{}\\). Consider hazard function \\[    \\lambda(t|\\boldsymbol{X}_{}) = \\lambda_{0}(t)\\exp\\{\\boldsymbol{X}_{}^T {\\boldsymbol\\beta}(t)\\}, %\\nonumber \\] \\(\\lambda_{0}(t)\\) baseline hazard. estimate time-varying coefficients \\({\\boldsymbol\\beta}(t)=\\{\\beta_{1}(t),\\ldots, \\beta_{P}(t)\\}\\), span \\(\\boldsymbol\\beta(\\cdot)\\) set cubic B-splines defined given number knots: \\[\\begin{eqnarray}    \\beta_{p}(t)=\\boldsymbol\\theta_{p}^T  \\boldsymbol{B}(t)=\\sum_{k=1}^K \\theta_{pk} B_k(t), ~~ p=1, \\ldots, P,   \\nonumber \\end{eqnarray}\\] \\(\\boldsymbol{B}(t)=\\{B_1(t), \\ldots, B_K(t)\\}^T\\) forms basis, \\(K\\) number basis functions, \\(\\boldsymbol\\theta_{p}=(\\theta_{p1}, \\ldots, \\theta_{pK})^T\\) vector coefficients \\(\\theta_{pk}\\) coefficient \\(k\\)-th basis \\(p\\)-th covariate. length-\\(PK\\) parameter vector \\(\\boldsymbol\\theta=vec(\\boldsymbol\\Theta)\\), vectorization coefficient matrix \\(\\boldsymbol\\Theta=(\\boldsymbol\\theta_{1}, \\ldots, \\boldsymbol\\theta_{P})^T\\) row, log-partial likelihood function \\[\\begin{equation}   \\ell(\\boldsymbol\\theta)=\\sum_{=1}^{n_j} \\delta_{} \\left [\\boldsymbol{X}_{}^T \\boldsymbol\\Theta  \\boldsymbol{B}(T_{})   -\\log   \\left\\{\\sum_{' \\R_{}}  \\exp \\{\\boldsymbol{X}_{' }^T \\boldsymbol\\Theta  \\boldsymbol{B}(T_{}) \\} \\right \\} \\right ] \\end{equation}\\], \\(R_{}=\\{': 1 \\leq ' \\leq n, ~ T_{'}\\geq T_{}\\}\\) -risk set. coxtv applies Newton’s method solve problem. Specifically, suppose current estimates \\(\\widetilde{\\boldsymbol\\theta}\\), update \\[     \\widetilde{\\boldsymbol\\theta} \\leftarrow \\widetilde{\\boldsymbol\\theta} + \\nu \\boldsymbol{\\mu}; \\] \\[   \\boldsymbol{\\mu} = \\left(- \\nabla^2 \\ell(\\boldsymbol{\\theta}) \\right)^{-1} \\nabla \\ell(\\boldsymbol{\\theta}) \\], \\(\\nu\\) step size adjusted backtracking linesearch. \\(\\nabla \\ell(\\boldsymbol{\\theta})\\) \\(\\nabla^2 \\ell(\\boldsymbol{\\theta})\\) first second derivative log partial likelihood.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"commonly-used-function-arguments","dir":"Articles","previous_headings":"Newton’s method","what":"Commonly used function arguments","title":"Introduction to surtvep","text":"coxtp provides various arguments users customize fit: introduce commonly used arguments . strata stratified cox model. stratification group defined data. exist stratification group, please enter vector. nsplines number basis functions B-splines, denoted \\(K\\) model introduction. ties dealing ties, default ties=\"Breslow\", uses brewslow approximation. tol convergence threshold. default threshold set tol=1e-6. iter.max maximum Iteration number, default iter.max=20L method selecting two variants Newton’s Method. method=\"Newton\" uses classical Newton’s method. method=\"ProxN\" default method, uses proximal Newton’s methods. lambda parameter Proximal Newton’s Method. Default lambda=1e8 btr selecting backtracking line search approach, default btr=\"dynamic\". predictors presented low frequency, btr=\"static\" can used improve stability. tau parameter backtracking line search control step size. Default tau=0.5. stop selecting stopping rule, default stop=\"ratch\": parallel logical flag parallel computation, Default parallel=FALSE. threads number threads used parallel computation enabled (parallel=TRUE). degree ord fixedstep logical flag fixed iteration steps. Default value fixedstep = FALSE. fixedstep = FALSE, algorithm stopped iter.max regardless stop criteria used. following sections brefily describe useful arguments calling coxtv. Now start relatively harsh simulated data. , covariates V1 V2 generated binary variables around 90% frequency, relatively harsh setting estimated. related true log-hazard function variable \\(\\beta(t)=1\\) \\(\\beta(t)=exp(-1.5*t)\\), t denotes time. Let’s check data first: predictors presented frequency around 25%.","code":"data(\"ExampleDataBinary\") table(ExampleDataBinary$x[,1]) #>  #>    0    1  #> 1520  480 table(ExampleDataBinary$x[,2]) #>  #>    0    1  #> 1564  436  z     <- ExampleDataBinary$x time  <- ExampleDataBinary$time event <- ExampleDataBinary$event"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"proximal-newtons-method-method-proxn","dir":"Articles","previous_headings":"Newton’s method","what":"Proximal Newton’s method: method = \"ProxN\"","title":"Introduction to surtvep","text":"‘method’ parameter two options. method=\"Newton\" method=\"ProxN\". proximal Newton’s method modified second order derivative \\(\\nabla^2 \\ell(\\boldsymbol{\\theta})\\) adding small terms \\(1/\\lambda\\) diagonal elements. default value \\(\\lambda\\) \\(10^8\\), can modified user. data set predictors extremely low frequency, users may consider smaller \\(\\lambda\\). plot fitted methods curves plot. obvious change can oberserved . However, recommand using","code":"fit.newton <- coxtv(z = z, event = event, time=time, method = 'Newton') fit.proxN <- coxtv(z = z, event = event, time=time, method = 'ProxN') plot(fit.newton, ylim = c(-2,2), allinone = TRUE) plot(fit.proxN, ylim = c(-2,2), allinone = TRUE)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"stratified-newtons-method-strata","dir":"Articles","previous_headings":"Newton’s method","what":"Stratified Newton’s Method: strata","title":"Introduction to surtvep","text":"different facilities present, can extend model stratified version. use \\(j=1,\\ldots,J\\) denote \\(J\\) different centers Let \\(D_{ij}\\) denote time lag death \\(C_{ij}\\) censoring time patient \\(\\) center \\(j\\), \\(=1,\\ldots, n_j\\), \\(j=1, \\ldots, J\\). \\(n_j\\) sample size center \\(j\\). total number patients \\(N=\\sum_{j=1}^Jn_j\\), observed time \\(T_{ij} = \\min\\{D_{ij},C_{ij}\\}\\), death indicator given \\(\\delta_{ij} = (D_{ij} \\leq C_{ij})\\). Let \\(\\textbf{X}_{ij}=(X_{ij1}, \\ldots, X_{ijP})^T\\) \\(P\\)-dimensional covariate vector. assume \\(D_{ij}\\) independent \\(C_{ij}\\) given \\(\\textbf{X}_{ij}\\). Correspondingly, log-partial likelihood function \\[     \\ell_{strata}(\\boldsymbol\\theta) = \\sum_{j=1}^J \\sum_{=1}^{n_j} \\delta_{ij} \\left [\\boldsymbol{X}_{ij}^T \\boldsymbol\\Theta  \\boldsymbol{B}(T_{ij})     -\\log     \\left\\{\\sum_{' \\R_{ij}}  \\exp \\{\\boldsymbol{X}_{' j}^T \\boldsymbol\\Theta  \\boldsymbol{B}(T_{ij}) \\} \\right \\} \\right ], \\] \\(R_{ij}=\\{': 1 \\leq ' \\leq n_j, ~ T_{' j}\\geq T_{ij}\\}\\) -risk set stratum \\(j\\). case different stratums, usage include strata variable. First, load set generated data different stratums. simulation, vary baseline different stratums adding small term generated uniform distribution mean = 0 standard deviation= 0.5. strata variable can ns >= 1 level factor, numerical numbers strings. stratified model can easily fitted calling","code":"data(\"StrataExample\") z     <- StrataExample$x time  <- StrataExample$time event <- StrataExample$event strata <- StrataExample$strata fit.strata <- coxtv(z = z, event = event, time=time, strata = strata) plot(fit.strata, ylim = c(-2,2))"},{"path":[]},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"model-results-meanings","dir":"Articles","previous_headings":"Newton’s method > Step size adjustment: btr","what":"Model results meanings:","title":"Introduction to surtvep","text":"First, Let’s look fit result 4 results saved fit result. model_result save detailed model results explain minute. lambda.selected saved best lambda chosen based different criteria used non-penalized model. p refers number covariates used model z_names records covariates names. detailed model result saved model_result, can called fit$model_result. Now, let’s explore result little bit: noticed 16 items model results list. Following explanation item: theta: Estimation matrix \\(\\theta\\) logplkd: log-partial likelihood theta.: Internal validation use theta.list: estimation matrix Newton’s update AIC.: Akakia information criterion TIC.: Takeuchi information criterion GIC.: Generalized information criterion AIC.trace: Internal validation use TIC.trace: Internal validation use GIC.trace: Internal validation use logplkd.vec: log-partial likelihood iteration SplineType: spline used fitting model VarianceMatrix: Variance Matrix uniqfailtimes: input unique event times ties=\"Breslow\", input time points ties=\"None\" (Add link) bases: basis function used estimating time-varying effects knots: Number basis functions used estimating time-varying effects","code":"# summary(fit.tv)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"how-to-get-the-effect-of-a-specific-time-point","dir":"Articles","previous_headings":"Newton’s method > Step size adjustment: btr","what":"4.1.2.2: How to get the effect of a specific time point?","title":"Introduction to surtvep","text":"interested estimating time-varying effect covariates. Following simple tutorial . First, little background time-varying effect cox model(also check part paper detailed explanation.(insert link)) Let \\(X_i=(X_{i1},X_{i2},...X_{ip})^T\\) refers \\(i_{th}\\) individuals dataset p covariates(also understand \\(i_{th}\\) row data extract ). Let \\(\\lambda(t|X_i)\\) denote hazard event time t \\(i_{th}\\) individual, \\(\\lambda_0(t)\\) denote hazard event time 0. considering covarites time fixed effect, following formula \\(\\lambda(t|X_i)\\): \\(\\lambda(t|X_i)=\\lambda_0(t)exp(X_i^T\\beta)\\) \\(\\beta\\) refers coefficients \\(\\beta=(\\beta_1,\\beta_2,...\\beta_p)\\), example, (V1, V2). similar format GLM model. time-varying effect model, simply replace \\(\\beta\\) set \\(\\beta(t)\\). Thus, time varying equations transferred following: \\(\\lambda(t|X_i)=\\lambda_0(t)exp(X_i^T\\beta(t))\\) Similar, \\(\\beta(t)=(\\beta_1(t),\\beta_2(t),...\\beta_p(t))\\) \\(\\beta(.)\\) refers set cubic B-spline(Details B-spline refers : insert link). , single \\(\\beta_p(t)\\) estimated using following formula: \\(\\beta_p(t)=\\theta_p^TB(t)=\\sum_{k=1}^K\\theta_{pk}B_k(t)\\) , K refers given number knots. Thus, calculate time varying effect coefficient p, just need get estimated B spline \\(\\theta\\) matrix. B-spline saved model_result$bases \\(\\theta\\) matrix saved last item model_result$theta_list Following code calculation: result, \\(\\beta\\) 2487*2 matrix(using “Breslow” ties, thus 2487 rows instead 5000, detail ties Breslow ties refers (insert link)). also get 95%CI estimation confint.surtiver","code":"CI <- confint.surtiver(fit.proxN) head(CI$tvef$X1) #>                           est     2.5%    97.5% #> 0.000201305374503136 1.915036 1.094259 2.735813 #> 0.000913836294785142 1.900685 1.099472 2.701898 #> 0.000952352538988396 1.899914 1.099747 2.700081 #> 0.00131430392382309  1.892692 1.102301 2.683083 #> 0.00156992387894415  1.887617 1.104068 2.671167 #> 0.00167505841328876  1.885536 1.104787 2.666286"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"newton-method-with-penalization","dir":"Articles","previous_headings":"","what":"Newton Method with penalization:","title":"Introduction to surtvep","text":"proximal Newton can help improve estimation origional hessian matrix close singular one, may often occur setting time-varying effects, however, -fitting issue still exists. improve estimation introducing penalty. basic idea penalization control model’s smoothness adding ‘wiggliness’ penalty fitting objective. Rather fitting non-proportional hazards model maximizing original log-partial likelihood, fitted maximizing \\[\\begin{align}     \\ell(\\boldsymbol{\\theta}) - P_\\lambda(\\boldsymbol{\\theta}). \\end{align}\\] different choices \\(P_\\lambda(\\boldsymbol{\\theta})\\). Potential choices use P-splines, discrete penalties. Detailed discussions provided .","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"p-spline","dir":"Articles","previous_headings":"Newton Method with penalization:","what":"P-spline","title":"Introduction to surtvep","text":"P-splines low rank smoothers using B-spline basis, usually defined evenly spaced knots, difference penalty applied directly parameters \\(\\theta_{pk}\\), control function wiggliness. set standard cubic B-spline basis functions, penalty function used \\(\\beta_p\\) \\[\\begin{align*}     P_\\lambda(\\boldsymbol{\\theta}) = \\lambda\\sum_{j=1}^P\\sum_{k=1}^{K-1}\\{(\\boldsymbol{\\theta}_{j(k+1)}  - \\boldsymbol{\\theta}_{jk})\\}^2. \\end{align*}\\] straight forward express penalty quadratic form, \\(\\boldsymbol{\\theta}^T\\boldsymbol{S}\\boldsymbol{\\theta}\\), basis coefficients: \\[\\begin{align*}     \\sum_{k=1}^{K-1}\\{(\\boldsymbol{\\theta}_{j(k+1)}  - \\boldsymbol{\\theta}_{jk})\\}^2     =         \\boldsymbol{\\theta}^T     \\begin{bmatrix}         1 & -1 & 0 & 0 & . & . & . \\\\         -1 & 2  & -1 & 0 & 0 & . & . \\\\         0 & -1  & 2 & -1 & 0 & 0 & . \\\\         . & . & . & . & . & . & .\\\\         . & . & . & . & . & . & .\\\\     \\end{bmatrix}     \\boldsymbol{\\theta} \\end{align*}\\] Hence penalized fitting problem maximize \\[\\begin{align}     \\ell(\\boldsymbol{\\theta}) - \\lambda\\boldsymbol{\\theta}^T\\boldsymbol{S}\\boldsymbol{\\theta} \\end{align}\\] respect \\(\\boldsymbol{\\theta}\\).","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"smoothing-spline","dir":"Articles","previous_headings":"Newton Method with penalization:","what":"Smoothing-spline","title":"Introduction to surtvep","text":"reduced rank spline smoothers derivative based penalties can set almost easily, retaining sparsity basis penalty ability mix--match orders spline basis functions penalties. denote B-spline basis order \\(m_1\\), \\(m_1 = 3\\) denotes cubic spline. Associated spline derivative based penalty \\[\\begin{align*}     P_{\\lambda} = \\lambda \\int_{0}^{T}\\boldsymbol{\\beta}^{[m_2]}(t)^2dt \\end{align*}\\] \\(\\bbeta^{[m_2]}(t)\\) denotes \\(m_2^{th}\\) derivative \\(\\bbeta\\) respect \\(t\\). assumed \\(m_2 \\leq m_1\\), otherwise makes sense penalty formulated terms derivative properly defined basis functions. Similarly, \\(P_{\\lambda}\\) can written \\(\\boldsymbol{\\theta}^T\\boldsymbol{S}\\boldsymbol{\\theta}\\) \\(\\bS\\) banded diagonal matrix known coefficients. algebraic expression \\(\\bS\\) complex, discussed . However, little impact computation time. ###Usage usage Newton Method penalization coxtp similar coxtv introduced . main difference comes penalization parameter selection. use smooth spline penalization(default). also use spline=\"P-spline\". lambda_spline, either enter numeric number vector numbers. lambda_spline entered vector numbers, best lambda selected based different criteria(AIC, TIC GIC). Following model fit lambda_spline vector different illustration purposes. use relatively harsh setting ExampleDataBinary illustrate useage ‘coxtp’, penalization method.  optimal lambda saved model term lambda.selected result , noticed different selection criteria, best lambda selected different. , use AIC criteria set lambda=1000. result model saved related criteria model called : Compare non-penalized Model, see effect “V1” shrink roughly linear penalized model. detail calculation B-spline matrix, \\(\\theta\\) matrix \\(\\beta\\) matrix similar Newton’s method.","code":"data(ExampleDataBinary) z     <- ExampleDataBinary$x time  <- ExampleDataBinary$time event <- ExampleDataBinary$event lambda_spline_all=c(0.001,0.01,0.1,1,10,100,1000) fit.pspline <- coxtp(event = event, z = z, time = time, lambda_spline=lambda_spline_all, spline = \"P-spline\") fit.smoothspline <- coxtp(event = event, z = z, time = time, lambda_spline=lambda_spline_all, spline = \"Smooth-spline\") plot(fit.pspline, IC = \"TIC\", allinone = TRUE, ylim = c(-2,2)) plot(fit.smoothspline, IC = \"TIC\", allinone = TRUE, ylim = c(-2,2)) best_lambda=fit.pspline$lambda.selected best_lambda #>     value #> AIC    10 #> TIC    10 #> GIC    10"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"baseline-estimation","dir":"Articles","previous_headings":"Newton Method with penalization:","what":"Baseline estimation","title":"Introduction to surtvep","text":"Nelson-Aalen estimator (Breslow estimator) culmulative function given \\(\\widetilde{\\Lambda}(t) = \\int_0^t \\widetilde{\\Lambda}_0(u)\\), \\(\\widetilde{\\Lambda}(t)\\) 0 except observed failure times \\(t_i\\), takes value \\[\\begin{align*}     d\\Lambda_0 = {d_i}\\left\\{\\mathop{\\sum}\\limits_{\\ell \\R(T_i)} \\exp \\{\\boldsymbol{X}_{' }^T \\boldsymbol{\\Theta}  \\boldsymbol{B}(T_{}) \\}\\right\\}^{-1}. \\end{align*}\\] baseline estimation refers baseline hazard time t holding covariates equals zero. use model fitted result fit_penalized section 4.2. result, either increase time interval make ties exists remove points \\(\\lambda=0\\). differences result baseline hazard, influence cumulative baseline hazard. One use Cumulative baseline hazard calculate survival function cumulative hazard negative log survival probabilities. assume cumulative baseline hazard function \\(S(t)\\) cumulative hazard function \\(H(t)\\), \\(H(t)=-log(S(t))\\). Thus, plot survival function follows:","code":""},{"path":[]},{"path":[]},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"simple-prediction","dir":"Articles","previous_headings":"5.6 Model prediction:","what":"5.6.1 Simple prediction","title":"Introduction to surtvep","text":"predict new data, offered function coxtp.predict. function also used calculate absolute hazard. Suppose new data predicted c(1,1,0,0,0) V1 V5. data stratification: (Suppose already best tuning parameter lambda_spline selected).","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"absolute-hazard","dir":"Articles","previous_headings":"5.6 Model prediction:","what":"5.6.2 absolute hazard","title":"Introduction to surtvep","text":"want calculate show difference absolute hazard variable V2, use coxtp.predict get done. Assume besides V2, covariate set reference level. result , notice function smoothness looks different. data stratification, just define strata=T(Default FALSE):(, suppose already best tuning parameter lambda selected) , plot result ggplot:","code":""},{"path":[]},{"path":[]},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"accurancy","dir":"Articles","previous_headings":"6. Model performance > 6.1 Internal comparison","what":"6.1.1 Accurancy:","title":"Introduction to surtvep","text":"non-penalized method, estimation largely depended number knots chosen B-Spline base function. example shown using default knots, nspline=8. However, estimation largely different choose knots. Following code showing performance estimation choosing different knots: plot , observe different knots selected, performance different much different knots, estimates relatively close real function. However, penalized model, lambda important another reason need select best lambda actually fitting model. following plot performance different lambda selected. following plot, knot set default, knot=8.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/articles/surtvep.html","id":"real-data-example-support","dir":"Articles","previous_headings":"6. Model performance","what":"Real Data Example SUPPORT","title":"Introduction to surtvep","text":"section, illustrate usage package analyzing time-varying effects real data SUPPORT (Study Understand Prognoses Preferences Outcomes Risks Treatment). original data missing. imputation, total 9105 individuals 47 variables. variables, removed imputation. removed three response variables: hospital charges, patient ratio costs charge,s patient micro-costs. Next, removed hospital death directly informative event interest, namely death. also removed functional disability income ordinal covariates. Finally, removed 8 covariates related results previous findings: removed SUPPORT day 3 physiology score (), APACHE III day 3 physiology score (), SUPPORT model 2-month survival estimate, SUPPORT model 6-month survival estimate, Physician’s 2-month survival estimate pt., Physician’s 6-month survival estimate pt., Patient Resuscitate (DNR) order, Day DNR order (<0 study). , added imputation, missing 1 observation. First imputed manually using normal values physiological measures recommended Knaus et al. (1995). Next, imputed single dataset using default settings. imputation, noted covariate surrogate activities daily living imputed. due collinearity two covariates activities daily living. Therefore, surrogate activities daily living removed. First load data: Instead analzyi","code":"data(support) # Using the matrix interface and log of time summary(support$age) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   18.04   52.80   64.86   62.65   74.00  101.85 cut(support$age, quantile(support$age, c(0,1/4,1/2,3/4,1), na.rm = TRUE),      labels = c(0,1,2,3), include.lowest = TRUE) #>    [1] 1 1 0 0 3 3 1 3 3 0 0 1 0 2 0 1 0 1 0 1 2 0 0 0 0 1 3 0 0 0 3 1 3 1 1 1 2 #>   [38] 0 0 1 2 2 3 0 3 3 1 0 0 0 3 0 3 1 3 3 0 0 2 1 2 0 1 0 1 2 1 0 0 2 0 0 1 0 #>   [75] 2 3 3 2 3 0 3 0 1 0 1 2 2 2 2 2 3 2 1 0 3 1 3 1 3 3 0 2 2 2 1 0 2 3 3 3 2 #>  [112] 1 2 0 2 1 1 0 1 1 0 3 3 3 1 3 0 2 3 0 3 1 3 2 1 2 0 2 2 0 0 1 0 0 2 3 2 0 #>  [149] 3 1 1 2 0 0 3 1 2 0 1 3 3 0 1 2 0 0 3 1 0 1 3 2 2 0 2 0 3 0 0 0 1 1 2 0 0 #>  [186] 3 0 1 2 1 3 0 1 1 1 1 0 1 0 3 1 1 1 0 2 2 1 3 0 1 2 0 1 1 3 3 3 0 3 0 1 1 #>  [223] 3 3 0 2 0 1 2 2 3 3 2 1 1 0 2 0 0 3 2 3 2 2 1 0 1 1 1 1 2 3 0 0 3 1 0 3 0 #>  [260] 1 0 2 2 0 2 1 1 0 2 1 0 0 0 3 3 0 1 0 0 3 3 0 0 2 1 0 1 2 1 3 2 2 1 0 2 1 #>  [297] 0 1 1 2 2 2 0 1 2 0 0 0 2 1 0 3 2 2 1 0 3 0 0 2 2 1 0 2 0 0 0 0 2 1 2 1 3 #>  [334] 1 0 0 3 3 0 1 1 3 0 0 3 0 1 0 3 0 2 0 2 2 2 2 3 0 1 1 1 1 0 0 0 0 0 2 2 1 #>  [371] 0 3 0 1 1 1 1 0 0 0 1 3 3 1 2 0 3 2 0 0 1 0 3 3 0 3 3 2 0 0 1 1 0 2 0 1 3 #>  [408] 3 0 1 2 2 3 1 0 1 2 0 1 1 1 0 0 3 0 3 0 0 0 1 1 3 2 0 1 1 1 3 2 0 1 3 1 1 #>  [445] 0 1 0 0 0 2 0 3 3 3 3 1 0 1 1 3 0 0 3 2 3 0 3 0 0 0 1 3 3 1 0 1 3 0 0 0 0 #>  [482] 0 2 0 1 0 0 3 0 2 1 3 2 0 0 1 3 2 2 1 0 0 1 0 0 1 0 1 0 2 3 0 1 1 0 3 1 1 #>  [519] 0 0 0 1 2 0 3 1 0 0 0 3 0 1 0 3 3 0 0 0 1 0 0 1 2 2 3 1 3 3 0 0 2 3 0 1 3 #>  [556] 2 3 2 0 3 0 3 0 0 1 0 0 3 1 1 2 3 2 0 0 0 1 1 1 1 3 2 1 0 0 1 3 3 1 0 2 3 #>  [593] 1 0 1 1 3 1 0 0 0 2 2 0 2 1 2 0 0 0 2 0 1 1 2 1 3 1 1 0 3 2 2 0 1 2 1 3 0 #>  [630] 3 3 0 0 3 3 3 1 3 0 3 3 2 0 0 3 1 1 2 0 0 3 2 3 1 0 1 2 3 3 1 1 2 1 2 0 0 #>  [667] 0 1 0 2 0 1 1 2 0 2 0 1 0 0 1 2 0 1 1 2 0 0 0 0 3 0 2 0 3 3 2 0 3 3 2 2 2 #>  [704] 3 0 1 2 0 0 1 1 0 2 1 0 1 3 0 0 2 3 0 0 0 2 2 2 1 2 0 0 2 1 1 2 0 1 2 0 0 #>  [741] 0 1 1 1 2 3 3 0 0 2 2 1 0 3 0 1 3 1 0 2 0 1 2 2 0 0 0 1 0 2 0 1 2 2 1 2 2 #>  [778] 1 3 1 1 3 0 2 3 3 2 2 2 0 1 3 1 2 3 1 2 1 0 2 0 2 2 2 1 0 0 3 2 3 3 1 1 2 #>  [815] 0 0 0 1 2 2 2 1 0 3 3 2 2 2 0 1 1 0 0 3 1 3 0 0 0 2 1 2 3 0 1 3 0 3 1 3 0 #>  [852] 3 1 1 1 0 1 3 1 2 2 0 0 0 0 1 0 1 2 1 1 0 1 0 0 0 3 0 3 0 1 1 0 3 3 1 3 1 #>  [889] 2 0 3 0 1 3 2 0 1 3 1 1 0 3 0 0 0 1 0 3 3 0 3 3 1 3 3 3 3 3 0 0 1 0 0 3 3 #>  [926] 0 3 3 3 1 3 0 2 3 2 0 2 1 0 0 0 0 0 2 3 0 1 0 1 2 3 0 3 0 2 3 2 2 2 3 2 3 #>  [963] 0 1 3 0 2 0 0 1 0 1 0 0 3 1 1 2 1 0 1 0 3 0 1 0 1 0 1 2 0 1 1 0 1 2 1 0 1 #> [1000] 0 0 2 1 3 3 2 2 3 2 2 1 2 0 3 0 1 1 3 3 2 2 0 2 0 0 0 0 1 0 3 2 0 0 0 3 0 #> [1037] 0 0 2 2 1 0 1 2 1 1 0 1 3 3 2 0 1 3 2 3 0 0 1 0 3 2 0 1 3 0 0 3 0 0 2 1 0 #> [1074] 3 0 1 3 1 1 3 0 3 3 0 1 0 2 1 3 2 2 3 3 1 2 0 3 1 2 0 2 0 0 3 1 1 2 0 3 3 #> [1111] 0 2 1 3 1 0 0 3 3 3 0 1 0 3 0 1 3 0 2 0 0 3 1 1 2 0 2 0 1 1 1 0 3 0 0 3 0 #> [1148] 2 2 2 3 0 0 0 3 3 1 0 2 0 0 3 2 0 1 0 2 0 2 0 0 0 2 1 0 2 3 1 0 0 0 3 1 1 #> [1185] 0 3 0 1 3 0 2 1 2 0 3 0 2 3 0 2 2 0 0 3 1 1 1 0 0 0 0 3 2 0 2 1 3 3 2 1 2 #> [1222] 1 0 2 1 0 0 0 1 3 3 0 0 2 3 1 0 1 3 0 1 1 2 1 0 0 0 3 2 0 1 3 1 2 1 1 1 3 #> [1259] 2 0 1 1 3 3 1 3 3 0 0 1 2 0 0 1 2 2 2 0 0 0 3 2 0 0 2 1 0 1 2 2 3 1 0 0 0 #> [1296] 3 2 3 3 1 2 1 2 1 0 1 1 0 1 2 2 2 1 1 0 0 2 0 1 3 1 0 3 1 0 2 2 0 1 0 3 2 #> [1333] 0 2 1 1 2 2 2 0 2 1 2 2 2 3 2 1 0 0 3 0 1 1 3 2 0 1 2 2 1 2 0 0 1 0 2 1 2 #> [1370] 1 2 1 1 0 0 0 1 2 1 2 0 2 0 2 1 2 1 2 2 1 3 1 0 1 3 0 0 0 2 1 1 1 2 1 3 1 #> [1407] 3 3 2 1 1 2 3 0 0 0 2 1 1 0 3 1 3 2 2 2 3 1 0 1 1 0 0 3 1 2 0 2 2 1 0 1 0 #> [1444] 1 2 3 2 0 3 3 0 1 0 1 0 2 0 3 0 0 3 0 1 0 3 1 0 0 2 1 1 1 0 2 1 2 2 2 2 1 #> [1481] 3 1 1 1 1 3 3 2 0 1 1 2 0 0 0 1 2 3 1 2 1 1 0 1 3 0 2 0 3 3 0 1 0 0 0 2 0 #> [1518] 1 2 2 1 3 2 0 2 1 3 1 3 0 2 0 2 0 1 1 0 2 1 0 3 0 3 2 0 3 2 0 1 0 3 3 3 0 #> [1555] 1 2 3 1 2 0 0 2 1 2 0 2 1 2 3 3 3 2 3 1 3 1 2 1 0 1 3 1 0 0 1 0 0 2 2 2 0 #> [1592] 1 2 1 2 2 0 3 0 3 3 1 1 0 0 3 1 3 2 3 0 3 3 3 1 1 3 0 3 1 1 3 1 0 3 3 3 3 #> [1629] 1 1 2 2 0 1 2 3 2 0 0 1 3 3 0 2 0 1 3 2 3 2 3 2 2 1 3 2 1 3 0 1 3 3 3 0 2 #> [1666] 3 3 0 3 0 1 3 3 0 2 2 1 3 3 2 3 0 2 3 0 3 0 2 2 0 1 2 3 3 0 2 0 3 1 3 2 3 #> [1703] 0 3 2 2 2 3 1 2 3 2 0 2 2 3 2 3 2 2 3 0 3 2 1 0 3 0 3 1 2 2 1 3 2 2 3 3 3 #> [1740] 0 0 1 3 1 2 1 1 3 1 1 3 2 3 3 0 3 0 2 1 2 3 1 1 3 0 3 3 2 2 3 2 2 3 3 3 3 #> [1777] 3 1 1 3 2 2 0 1 0 1 2 0 3 3 3 1 3 1 3 0 0 3 0 3 1 2 1 1 2 1 0 1 3 3 0 2 3 #> [1814] 1 0 0 0 3 2 1 3 1 2 3 2 1 0 2 3 3 1 3 2 2 3 3 3 3 3 3 1 2 3 1 3 3 3 3 3 3 #> [1851] 3 2 2 0 2 0 2 0 2 3 3 3 2 2 2 3 2 3 3 3 3 3 1 3 0 3 3 3 3 3 2 3 0 2 3 0 1 #> [1888] 1 1 1 0 1 3 3 0 3 1 3 2 3 1 1 1 2 2 1 3 1 3 1 2 3 3 2 1 3 0 2 2 3 2 2 3 1 #> [1925] 3 0 1 0 2 3 2 0 3 3 2 3 2 3 2 3 1 3 2 3 3 1 2 0 3 3 3 2 1 3 1 3 3 2 3 3 3 #> [1962] 2 0 2 1 3 1 2 2 1 0 1 3 3 3 3 2 0 3 3 0 3 3 3 0 3 3 2 3 1 2 3 1 2 3 3 2 3 #> [1999] 3 3 2 3 3 1 0 1 3 2 3 3 3 2 3 3 1 1 1 2 2 3 1 2 2 0 3 0 2 3 0 2 0 3 2 3 3 #> [2036] 3 3 1 3 2 2 2 0 1 3 3 2 0 3 1 0 3 3 2 3 0 3 3 3 3 1 1 2 3 3 3 0 0 3 2 3 2 #> [2073] 0 1 3 3 2 2 1 3 2 3 0 3 1 1 3 3 1 3 2 3 3 1 1 3 3 0 1 3 2 0 2 2 1 3 1 3 3 #> [2110] 1 2 3 2 1 3 3 3 1 1 3 0 1 3 3 0 3 2 3 2 2 0 0 1 1 3 3 3 2 0 3 0 3 1 2 3 3 #> [2147] 0 3 3 3 1 1 3 2 0 2 3 0 3 1 2 2 3 0 2 1 3 0 0 2 0 3 2 3 3 2 3 2 3 0 3 3 3 #> [2184] 3 3 3 0 3 3 2 0 2 0 3 1 1 3 0 3 3 3 3 3 0 0 3 2 1 3 1 3 3 2 0 3 0 1 2 0 0 #> [2221] 2 3 1 0 0 1 1 2 3 1 1 2 0 1 2 1 3 2 3 0 2 1 3 1 0 3 3 2 0 3 2 0 3 3 2 3 3 #> [2258] 3 2 3 3 3 0 3 3 0 1 0 3 3 3 3 2 1 1 2 3 0 1 3 3 3 3 3 2 3 1 3 3 3 3 3 3 3 #> [2295] 3 0 3 2 3 1 1 2 3 2 3 1 2 2 1 3 1 2 1 0 2 3 0 2 0 3 0 1 1 0 1 0 3 3 0 3 1 #> [2332] 3 3 2 0 3 0 3 3 1 3 3 3 2 3 3 3 0 0 2 3 2 3 3 1 3 2 3 3 3 3 0 0 1 2 3 3 0 #> [2369] 1 3 2 1 2 3 3 3 1 0 2 2 3 2 0 2 3 3 3 2 3 3 0 1 2 2 2 2 3 3 2 3 3 1 1 2 2 #> [2406] 2 2 3 2 0 1 1 1 3 0 3 0 3 3 3 3 2 1 2 3 3 2 3 2 1 2 3 1 3 0 3 3 0 3 1 2 3 #> [2443] 3 0 2 3 2 2 2 1 0 2 3 1 3 3 2 3 2 1 3 3 3 2 1 3 1 0 3 2 3 2 2 3 1 1 0 0 0 #> [2480] 1 3 2 2 3 2 3 3 3 3 2 0 1 0 3 3 3 1 3 3 3 2 3 3 3 3 3 3 2 2 1 3 2 3 2 2 3 #> [2517] 3 1 3 3 2 0 3 3 1 3 3 3 3 3 3 3 0 0 3 1 0 2 0 3 2 3 0 0 3 0 0 1 3 0 3 0 3 #> [2554] 3 3 1 1 0 3 1 2 3 0 0 2 1 0 1 3 1 1 0 3 0 0 3 3 3 1 2 1 3 0 2 1 3 2 3 2 2 #> [2591] 2 3 0 1 3 3 1 0 2 3 3 0 2 1 1 3 3 1 2 1 3 2 3 0 3 0 2 3 0 3 0 1 1 3 3 1 1 #> [2628] 3 2 1 3 3 3 0 3 3 3 2 1 3 3 3 3 3 3 0 2 2 3 2 0 1 1 2 3 3 0 3 3 3 2 2 3 3 #> [2665] 3 3 1 2 0 0 3 3 1 3 0 3 1 3 0 2 3 1 3 3 2 3 2 3 0 1 2 0 3 2 3 1 3 2 0 2 1 #> [2702] 3 3 2 3 0 3 1 3 3 1 0 3 2 3 3 3 0 3 3 0 2 3 0 2 2 1 3 2 3 1 0 0 3 0 2 2 0 #> [2739] 2 2 3 3 3 0 3 2 0 3 3 3 2 1 3 2 3 1 3 3 3 1 2 2 3 2 3 3 0 2 0 2 3 1 3 3 3 #> [2776] 1 1 0 2 2 2 2 3 3 0 3 0 1 2 0 3 2 1 3 3 3 1 3 3 2 3 2 2 0 3 0 3 0 3 3 1 3 #> [2813] 2 3 0 3 2 3 1 2 3 0 0 0 3 3 1 0 2 0 3 1 3 2 3 3 1 0 2 3 2 2 2 2 2 2 3 0 3 #> [2850] 3 3 1 3 3 3 2 1 3 2 3 3 2 2 0 2 3 2 1 2 0 3 3 2 2 0 3 1 1 3 3 2 3 3 0 3 3 #> [2887] 3 0 1 3 3 3 3 2 1 3 3 3 2 0 0 0 3 3 3 0 3 3 3 3 3 0 2 0 0 3 2 2 3 1 2 1 3 #> [2924] 3 1 3 3 3 3 3 1 0 0 3 0 3 3 1 3 1 3 3 3 3 3 3 3 3 2 0 0 3 1 3 3 3 0 0 2 3 #> [2961] 0 1 2 0 0 1 3 3 3 0 3 1 3 3 1 3 0 2 3 3 3 3 3 0 3 1 3 0 3 3 2 1 1 3 3 1 2 #> [2998] 1 1 0 0 3 3 3 3 3 2 3 3 2 1 3 0 0 2 3 2 0 3 1 3 3 3 3 1 0 2 0 2 3 3 3 3 3 #> [3035] 3 2 0 3 3 2 1 1 0 0 1 3 0 3 1 0 3 1 3 1 3 2 2 0 3 2 3 2 3 1 3 3 3 3 1 3 2 #> [3072] 3 3 2 2 3 3 3 3 3 1 3 1 2 2 2 0 2 2 2 2 3 1 0 3 1 3 2 3 3 1 1 1 2 1 2 3 3 #> [3109] 1 1 1 2 2 2 0 3 0 2 2 2 2 1 3 3 0 3 3 2 2 3 0 2 3 3 3 3 2 2 3 2 1 3 2 3 1 #> [3146] 3 1 3 0 3 3 2 3 2 2 0 0 3 3 3 3 0 0 2 3 2 2 0 3 1 3 3 3 3 0 1 3 3 2 1 3 3 #> [3183] 0 0 3 1 0 0 0 3 3 3 3 1 0 2 3 3 3 2 3 3 0 0 0 0 2 0 1 0 3 3 2 1 3 2 3 3 0 #> [3220] 3 3 3 3 2 0 3 2 1 3 2 3 3 3 3 2 0 2 1 0 2 0 0 2 1 1 3 0 0 0 0 0 0 2 1 1 3 #> [3257] 1 0 0 2 1 1 0 0 1 0 1 1 2 2 2 0 0 2 2 0 0 2 2 1 0 1 3 2 1 2 3 1 2 3 2 2 2 #> [3294] 0 0 0 3 0 0 2 2 0 2 1 2 1 3 1 0 3 2 1 1 3 0 1 2 1 3 2 0 3 2 0 0 0 2 1 1 2 #> [3331] 0 0 3 1 2 1 3 0 1 0 1 0 0 0 2 3 1 1 0 0 1 1 0 1 0 1 2 3 0 2 0 0 0 0 3 0 0 #> [3368] 2 2 0 2 0 3 2 1 1 1 1 0 1 0 1 2 2 1 0 0 3 3 1 0 2 2 1 1 0 1 0 0 3 2 3 0 1 #> [3405] 1 0 0 0 2 0 1 0 0 3 3 1 1 0 2 3 2 0 3 3 2 2 0 3 0 0 2 2 0 0 2 0 3 1 1 2 1 #> [3442] 3 3 1 2 2 2 3 0 1 1 1 2 1 2 0 2 0 0 2 3 1 2 2 3 1 0 1 1 1 3 2 2 3 2 2 1 2 #> [3479] 1 2 0 0 2 1 0 1 1 3 2 0 0 1 2 0 2 1 1 2 3 3 1 0 1 0 1 0 2 2 0 2 3 1 3 1 3 #> [3516] 2 0 3 0 0 1 0 0 2 1 1 2 0 2 0 2 1 1 1 3 2 0 3 2 0 1 2 2 2 2 2 1 1 3 0 3 2 #> [3553] 1 3 0 3 1 2 1 0 0 0 1 0 2 0 1 1 2 1 0 3 1 0 0 2 3 1 0 1 1 0 2 2 2 1 0 1 0 #> [3590] 1 1 0 0 2 1 3 1 0 0 2 3 2 0 0 3 1 2 0 2 0 2 1 2 0 2 3 0 1 2 1 0 0 2 1 2 0 #> [3627] 0 2 1 2 2 0 3 0 1 2 3 1 0 1 2 2 3 0 2 2 2 1 0 2 2 2 3 0 3 1 2 1 2 1 3 2 2 #> [3664] 0 0 0 1 1 2 2 1 2 2 0 1 0 0 1 0 0 0 2 1 1 0 2 1 1 1 0 1 2 1 3 2 2 1 1 1 2 #> [3701] 0 2 1 2 0 0 1 3 2 0 2 1 0 1 2 0 1 2 1 0 2 1 3 3 1 1 0 2 0 0 1 3 1 0 1 1 0 #> [3738] 3 3 3 0 0 0 0 0 2 1 0 3 2 3 1 0 3 1 0 1 3 2 1 0 1 1 0 3 1 1 1 1 0 2 1 2 2 #> [3775] 0 2 2 0 1 2 1 2 0 2 3 2 2 2 1 3 2 0 0 0 3 1 2 3 2 2 0 0 0 2 3 1 0 0 1 2 0 #> [3812] 2 2 0 1 1 2 1 0 1 2 0 2 1 3 2 0 2 1 1 3 0 2 0 0 0 2 0 0 1 2 1 2 0 0 0 1 0 #> [3849] 0 0 0 1 1 1 0 0 1 0 2 1 2 1 0 0 3 0 0 2 0 1 2 2 0 0 2 2 2 1 1 0 1 0 1 0 2 #> [3886] 3 0 0 0 2 1 3 2 2 2 2 1 2 0 0 2 3 2 1 2 1 2 1 3 0 1 0 1 1 1 0 0 0 1 0 0 2 #> [3923] 3 1 2 1 0 0 1 3 0 2 0 0 1 0 2 0 3 0 0 3 0 0 3 0 0 2 0 1 3 0 0 2 0 2 3 2 3 #> [3960] 1 0 0 3 3 0 0 3 2 0 2 2 0 1 2 1 0 1 0 0 2 1 1 0 0 1 1 1 1 1 1 1 3 2 1 0 3 #> [3997] 2 2 0 1 0 2 2 2 2 3 2 2 2 3 1 0 0 0 0 3 0 0 2 0 0 1 2 1 0 3 1 0 0 2 1 2 1 #> [4034] 1 0 2 3 2 2 2 3 2 2 0 1 1 0 0 3 3 0 2 1 0 1 2 3 1 0 3 1 0 3 0 1 1 3 0 0 1 #> [4071] 2 0 0 3 2 3 0 1 1 1 2 0 1 2 3 0 0 3 1 3 3 2 3 3 0 0 1 1 3 1 2 2 1 2 3 2 2 #> [4108] 2 2 1 0 3 1 1 3 3 2 0 1 0 1 0 1 3 2 0 1 2 1 3 3 1 0 2 1 0 1 1 3 2 0 0 0 1 #> [4145] 3 2 1 1 0 0 1 1 3 2 1 2 2 2 3 3 1 0 1 1 0 0 0 2 3 1 0 2 1 1 3 0 3 1 2 0 3 #> [4182] 0 2 1 1 1 3 3 3 2 0 2 2 0 2 1 0 2 3 1 2 0 2 2 1 0 3 0 0 3 0 2 1 0 3 2 0 0 #> [4219] 0 2 3 1 1 0 2 1 1 3 2 2 3 0 1 2 3 0 1 2 1 2 3 3 0 2 1 1 1 2 2 1 2 1 0 2 1 #> [4256] 3 3 1 1 3 2 3 2 1 0 0 0 3 0 2 2 3 1 0 0 1 3 1 3 2 0 2 0 0 2 0 2 3 0 3 0 2 #> [4293] 2 1 1 1 0 2 1 0 3 0 2 0 2 3 1 1 0 1 2 3 1 1 2 0 2 0 2 0 0 0 2 1 2 0 3 3 1 #> [4330] 1 1 1 1 0 3 1 2 1 3 0 3 3 0 2 2 0 3 0 1 0 2 1 2 2 1 2 2 2 0 1 0 2 2 1 0 0 #> [4367] 2 0 2 3 2 3 2 0 1 2 0 3 0 1 0 1 1 3 3 1 0 1 1 1 2 1 3 2 2 0 0 2 3 2 2 2 0 #> [4404] 0 2 0 0 0 2 3 2 3 2 2 1 1 1 1 3 2 1 3 2 0 2 2 0 1 2 1 2 0 0 0 1 3 3 0 1 2 #> [4441] 0 0 0 3 1 0 1 1 1 1 2 0 0 0 0 0 0 0 3 2 3 3 1 1 2 2 1 2 3 3 2 2 1 0 2 2 2 #> [4478] 3 3 1 0 1 1 0 3 3 3 1 2 2 0 1 0 1 3 2 1 2 2 1 2 2 2 3 0 2 2 1 1 2 1 1 0 0 #> [4515] 0 0 2 1 2 3 2 0 2 1 1 2 2 0 0 1 0 0 0 3 2 0 1 1 0 0 1 2 1 0 2 2 2 0 1 1 0 #> [4552] 2 3 1 0 0 3 2 0 3 3 3 2 2 0 0 0 2 0 2 0 0 0 0 1 1 1 0 3 1 2 2 2 3 0 0 0 2 #> [4589] 1 3 1 1 3 2 2 2 0 3 0 2 0 0 2 0 0 0 1 3 3 1 3 3 3 3 1 0 2 2 0 2 1 0 1 2 0 #> [4626] 2 2 0 2 1 1 1 0 1 1 2 1 0 3 1 2 3 1 0 1 1 3 0 3 0 1 0 3 0 1 3 3 2 3 1 2 2 #> [4663] 2 1 0 1 1 3 1 2 3 1 3 2 1 0 2 3 0 3 1 0 1 1 1 1 1 0 1 1 1 1 1 0 0 2 3 2 0 #> [4700] 1 0 2 2 2 0 3 2 1 3 1 0 3 1 2 2 0 1 3 1 2 0 1 0 2 2 3 0 3 1 2 0 0 3 3 3 2 #> [4737] 1 2 0 0 3 1 3 1 2 2 3 1 1 0 1 2 2 2 0 2 1 3 1 1 2 1 1 3 1 1 1 1 1 0 0 2 2 #> [4774] 0 0 1 1 3 3 3 3 3 3 0 1 0 1 1 2 0 3 1 1 2 2 2 0 0 2 0 1 0 2 3 0 0 0 0 2 2 #> [4811] 0 2 2 1 1 0 1 1 3 0 0 1 0 1 2 3 3 0 1 0 3 2 0 1 1 2 0 0 1 1 3 1 1 0 2 1 1 #> [4848] 0 0 2 0 1 2 2 2 0 1 2 2 0 1 2 1 1 0 1 3 2 1 2 3 1 0 2 3 1 3 1 3 0 0 3 0 2 #> [4885] 1 3 2 0 0 2 2 2 1 1 3 1 2 1 2 1 3 2 2 1 0 1 1 3 3 1 2 1 3 1 1 1 0 0 0 2 0 #> [4922] 3 2 3 0 0 2 1 1 1 1 0 1 0 2 3 2 3 0 0 1 0 2 3 3 0 2 3 0 0 1 1 3 0 3 1 0 1 #> [4959] 2 0 0 1 2 1 2 2 1 3 3 1 2 1 0 0 2 3 1 2 2 3 1 2 2 1 2 0 2 3 0 2 1 1 1 2 0 #> [4996] 0 2 1 0 1 0 2 2 2 2 2 3 2 0 2 1 2 1 1 1 2 3 2 3 1 0 3 2 3 1 0 0 0 2 1 1 0 #> [5033] 1 2 0 1 1 3 3 3 1 3 0 2 1 2 3 2 0 0 3 1 2 3 0 2 3 0 0 3 2 2 1 3 3 0 3 2 0 #> [5070] 1 2 1 0 2 3 1 2 1 0 2 0 2 2 1 0 0 0 0 2 3 2 1 1 2 2 0 2 0 0 1 3 0 2 1 0 3 #> [5107] 1 2 3 1 1 0 1 1 1 3 2 1 2 3 2 0 2 0 1 1 1 2 2 0 0 3 2 3 1 0 0 2 1 0 2 2 3 #> [5144] 0 2 2 2 1 2 3 2 0 0 1 0 1 3 1 1 1 1 1 1 1 1 1 1 0 1 3 0 3 1 0 1 3 3 0 0 2 #> [5181] 2 2 1 0 3 1 2 1 3 2 3 2 0 0 3 0 3 0 0 1 0 2 0 1 0 1 0 1 0 2 0 3 2 0 1 0 3 #> [5218] 0 1 1 3 1 2 0 2 1 3 1 1 2 3 0 0 0 0 2 3 1 0 1 1 2 2 2 2 3 3 1 0 1 0 2 2 2 #> [5255] 3 1 0 3 1 3 0 1 2 3 1 2 2 1 2 1 1 1 3 0 2 0 2 0 2 3 2 2 2 1 1 0 1 1 0 2 2 #> [5292] 1 0 1 0 0 0 1 1 1 2 2 0 0 0 0 0 3 0 2 1 2 2 3 1 1 2 0 0 1 2 2 2 3 0 2 2 3 #> [5329] 1 2 0 3 0 2 2 2 1 3 2 1 2 0 3 0 1 0 3 1 1 0 0 1 3 1 2 3 1 2 2 2 0 2 3 3 3 #> [5366] 3 0 2 0 3 0 2 3 2 1 0 2 1 2 0 2 1 1 2 0 2 2 0 1 1 1 0 3 0 2 0 0 2 1 2 2 2 #> [5403] 0 3 1 1 3 1 2 2 2 2 3 0 1 2 1 3 2 2 1 0 2 0 1 2 2 3 1 2 0 3 0 0 0 2 1 1 0 #> [5440] 1 0 2 0 2 0 1 0 0 2 1 0 2 0 0 2 1 0 0 1 3 3 0 2 3 0 0 1 1 2 2 0 1 2 3 2 2 #> [5477] 3 1 3 2 0 0 3 2 3 2 0 2 0 1 2 2 1 0 1 1 1 1 3 2 1 0 0 1 2 1 0 1 2 2 1 1 1 #> [5514] 2 2 2 3 0 0 2 2 2 0 3 2 0 1 0 2 1 0 3 0 0 2 1 0 2 2 2 0 1 2 1 0 0 0 3 0 1 #> [5551] 1 0 0 2 3 0 0 2 2 1 1 1 1 3 1 2 1 1 2 0 3 1 0 3 2 0 0 3 1 1 2 2 0 1 1 3 2 #> [5588] 0 1 1 0 3 1 0 3 1 1 2 3 1 3 0 1 1 0 2 1 2 3 2 0 0 1 0 3 1 0 0 1 3 1 0 0 0 #> [5625] 3 3 0 0 3 0 2 0 0 0 3 2 2 1 1 2 1 2 1 2 3 2 2 0 0 3 0 1 0 0 2 1 3 2 2 1 0 #> [5662] 1 2 2 2 3 3 0 2 0 3 2 1 2 2 3 0 0 1 3 0 2 2 2 3 0 0 3 1 1 3 0 1 0 0 0 2 0 #> [5699] 0 2 1 1 2 1 0 1 0 1 1 0 1 0 3 2 2 0 0 2 2 2 2 2 2 1 2 1 2 3 2 1 1 2 0 2 2 #> [5736] 0 3 1 0 0 0 2 1 2 1 3 2 2 0 1 0 3 1 0 0 1 3 2 3 3 1 1 0 3 2 0 2 2 0 2 3 2 #> [5773] 2 0 3 3 0 1 2 1 3 3 2 1 0 0 2 3 3 3 2 2 3 0 2 1 1 0 2 2 2 2 2 0 1 1 0 0 2 #> [5810] 0 0 2 0 3 1 0 0 1 0 0 1 0 0 0 0 2 1 0 0 0 3 0 3 2 1 1 1 2 3 0 2 1 0 0 2 2 #> [5847] 1 0 2 1 0 0 0 2 2 0 0 1 2 1 1 2 0 0 0 0 2 3 0 2 3 0 1 1 3 1 1 1 3 1 0 1 2 #> [5884] 1 1 2 2 1 2 2 0 1 2 0 2 3 1 1 0 1 2 0 0 1 2 0 0 2 3 1 1 0 2 1 3 2 2 1 2 3 #> [5921] 2 1 2 0 1 1 2 2 2 1 0 2 2 1 0 2 1 3 3 3 1 1 1 0 3 1 2 1 1 0 2 3 1 1 3 0 0 #> [5958] 1 2 1 1 2 1 2 3 0 1 2 1 1 2 3 1 3 2 3 2 0 0 2 1 3 0 1 0 3 2 3 0 0 3 0 3 0 #> [5995] 2 2 0 3 1 2 1 1 0 1 1 2 1 1 2 0 0 0 0 2 2 1 2 0 3 1 2 1 3 1 2 2 0 0 2 3 0 #> [6032] 1 0 1 1 0 1 2 0 1 1 1 1 2 3 1 1 1 1 2 2 1 1 1 2 0 3 1 1 3 3 2 0 0 2 2 1 3 #> [6069] 0 3 1 1 0 0 0 1 2 1 2 2 1 2 2 2 0 0 2 2 1 1 1 1 2 2 1 3 3 3 0 2 3 3 1 1 3 #> [6106] 1 1 0 3 0 0 0 1 3 1 2 3 0 1 0 0 0 3 1 1 3 1 0 2 1 0 0 0 2 0 2 1 0 1 0 1 2 #> [6143] 3 2 1 0 3 1 2 1 0 2 2 3 3 0 0 1 0 1 0 1 3 1 0 2 2 1 2 0 1 2 0 1 3 0 1 0 0 #> [6180] 3 1 1 0 1 1 1 1 1 0 3 2 0 0 0 1 1 3 3 2 0 2 2 1 1 3 2 1 0 2 0 3 2 1 2 2 3 #> [6217] 3 0 0 0 3 1 1 2 1 0 3 2 0 1 1 1 2 0 1 1 1 0 1 0 0 0 1 1 1 0 1 2 2 0 2 1 3 #> [6254] 2 2 0 1 3 0 3 1 0 0 3 2 3 0 0 2 1 0 1 1 1 1 3 0 1 0 1 2 3 1 2 2 0 2 1 0 0 #> [6291] 0 1 2 3 0 2 0 2 1 3 2 2 0 0 3 2 2 0 3 3 2 1 3 3 3 2 0 1 2 0 1 0 3 3 1 2 0 #> [6328] 1 1 0 0 2 2 0 2 0 1 3 0 3 1 0 3 0 0 2 3 1 0 0 2 1 3 3 3 3 1 0 0 3 3 0 0 3 #> [6365] 1 1 3 2 1 2 0 3 0 2 0 3 1 2 2 3 3 1 3 1 1 0 3 0 1 3 1 0 1 0 2 0 0 2 1 1 2 #> [6402] 0 1 1 2 1 1 3 2 2 1 1 1 2 3 2 1 1 2 1 1 2 1 2 0 2 2 0 0 3 2 1 2 1 1 3 0 2 #> [6439] 2 0 3 0 2 0 1 3 3 3 3 2 2 2 2 0 0 3 0 0 2 0 1 2 0 1 1 0 0 0 2 2 1 1 2 3 2 #> [6476] 1 1 3 1 0 1 0 1 1 0 1 2 3 2 0 0 1 0 0 1 0 2 0 3 0 0 1 1 2 0 1 3 2 3 2 0 2 #> [6513] 0 0 2 3 2 2 3 0 0 3 1 2 1 3 1 1 2 2 1 2 0 2 1 0 3 3 2 3 2 1 1 0 1 0 1 2 1 #> [6550] 2 2 1 3 0 0 3 0 2 0 2 2 0 3 0 0 1 0 0 2 1 0 1 0 3 2 3 0 3 1 0 1 2 1 0 2 2 #> [6587] 2 1 0 2 2 1 3 1 1 1 0 2 0 1 0 1 0 2 3 0 1 2 2 1 1 3 3 0 2 1 1 0 0 0 0 3 3 #> [6624] 2 2 2 0 1 3 0 1 0 3 2 2 0 3 0 0 2 0 0 2 0 0 0 1 3 0 2 0 2 3 0 3 3 1 0 0 1 #> [6661] 1 1 3 1 2 3 2 1 0 0 0 2 1 3 3 0 0 0 3 0 1 3 2 3 3 3 0 3 3 2 2 1 0 0 0 1 1 #> [6698] 1 2 0 1 2 0 2 1 0 0 0 1 3 3 0 2 2 1 0 0 2 3 2 0 3 1 3 1 1 0 0 2 3 1 1 2 0 #> [6735] 0 3 2 3 1 0 3 1 1 0 1 2 0 0 2 1 0 1 3 0 2 1 3 0 1 2 1 3 2 0 0 3 3 1 0 2 1 #> [6772] 1 2 0 3 0 2 3 0 3 2 1 0 1 0 2 1 1 1 3 0 2 0 1 0 3 1 0 2 2 3 0 1 1 3 3 3 0 #> [6809] 2 0 3 2 0 0 3 3 2 3 2 2 0 0 2 1 0 2 2 3 2 2 3 0 1 2 2 0 3 3 1 0 0 0 1 1 1 #> [6846] 3 3 2 2 3 2 2 1 2 1 3 2 1 0 3 0 1 2 1 0 3 0 1 3 2 1 2 2 0 0 1 0 1 2 3 2 0 #> [6883] 1 3 1 2 3 0 2 0 0 1 1 1 2 3 3 0 1 3 0 1 1 1 0 1 3 0 2 2 3 2 0 2 1 0 3 1 2 #> [6920] 2 1 2 0 1 0 1 1 2 0 2 0 1 1 3 0 0 3 3 3 2 2 3 1 2 3 0 0 1 1 2 0 1 1 0 1 1 #> [6957] 1 1 3 2 0 3 1 3 1 3 1 3 2 3 3 3 1 3 0 0 0 2 3 0 0 3 0 0 1 0 0 3 3 0 2 3 2 #> [6994] 1 0 2 2 1 1 2 2 2 1 2 3 2 3 3 2 3 2 0 3 0 1 2 1 0 2 2 0 0 2 0 2 2 3 3 1 2 #> [7031] 1 1 1 2 1 0 3 0 2 1 1 0 1 1 3 0 2 0 0 3 2 1 3 3 1 3 0 2 1 0 1 0 1 0 1 2 1 #> [7068] 3 1 2 2 0 1 2 1 3 0 2 3 2 1 1 0 1 1 2 1 3 0 3 2 3 3 2 1 2 3 2 1 3 3 2 0 0 #> [7105] 0 3 1 3 1 2 1 1 1 3 0 3 0 3 3 2 2 3 0 1 3 3 2 0 3 0 2 2 3 3 1 1 1 3 3 2 3 #> [7142] 2 1 3 3 3 1 2 2 1 0 0 2 1 1 1 3 1 3 0 0 1 0 2 0 3 2 0 1 0 0 3 1 3 1 1 1 3 #> [7179] 2 3 1 3 3 0 0 2 1 1 1 1 3 2 1 3 2 3 2 0 2 0 2 2 3 0 0 0 0 0 2 1 3 0 0 1 0 #> [7216] 1 1 2 1 1 3 0 1 3 0 3 0 0 2 3 0 0 1 1 0 0 0 3 1 1 1 3 0 1 1 3 0 3 0 0 0 2 #> [7253] 1 1 3 0 1 1 0 1 1 3 3 1 1 0 2 0 0 1 2 2 0 0 2 1 2 1 1 2 3 2 1 3 3 1 2 0 1 #> [7290] 2 2 3 3 3 3 0 2 3 0 0 1 0 0 0 1 3 1 0 2 1 2 0 1 0 2 3 2 3 1 2 3 3 3 1 1 0 #> [7327] 3 2 0 0 0 1 3 0 1 0 1 3 2 1 2 2 2 2 0 0 0 0 0 2 0 0 0 3 0 2 0 0 1 0 3 0 2 #> [7364] 2 2 3 1 1 0 3 1 2 0 0 2 1 2 2 3 3 3 3 2 2 0 2 0 3 0 1 3 0 3 2 0 2 0 3 3 0 #> [7401] 1 1 1 2 3 1 1 1 0 0 0 0 0 1 0 1 1 1 1 0 0 1 0 1 2 0 1 1 2 3 0 2 1 3 3 0 0 #> [7438] 3 2 1 1 3 2 0 3 1 0 2 3 1 1 3 0 3 2 2 3 1 0 0 1 0 1 2 0 3 0 2 3 3 3 0 3 0 #> [7475] 1 1 2 1 0 1 1 0 3 1 1 0 1 0 2 1 0 1 2 2 2 2 3 1 0 2 1 2 1 2 2 1 1 0 1 2 2 #> [7512] 0 1 1 0 0 2 0 2 1 1 0 3 1 0 0 1 2 3 0 0 0 3 0 0 1 1 0 2 2 2 0 2 0 0 0 1 2 #> [7549] 0 3 0 0 3 1 2 1 2 0 2 2 1 2 2 2 3 1 3 2 1 0 2 0 3 2 2 0 0 1 1 2 1 1 1 2 0 #> [7586] 2 3 1 2 1 2 3 1 3 0 1 2 0 2 0 1 1 3 3 2 1 1 3 2 1 2 3 0 0 3 0 0 1 0 1 3 0 #> [7623] 1 2 0 1 1 0 2 2 3 0 1 3 1 1 2 3 1 1 1 3 1 3 2 0 1 0 3 0 0 3 1 0 2 1 2 0 3 #> [7660] 2 3 0 1 3 1 0 1 2 1 0 1 2 1 1 0 2 2 1 3 1 0 3 0 3 1 2 0 0 2 1 2 0 2 0 1 1 #> [7697] 2 1 0 2 1 0 2 0 2 1 0 0 0 2 3 2 1 2 3 0 2 0 2 1 3 1 0 0 1 0 1 0 1 1 2 2 2 #> [7734] 1 1 2 2 1 2 1 3 1 0 1 3 3 3 3 3 1 2 2 1 2 1 2 2 0 2 2 3 2 2 3 3 1 0 2 3 0 #> [7771] 1 1 2 0 3 2 2 0 0 3 3 1 0 1 3 1 3 1 3 2 2 2 1 2 2 3 1 0 3 3 3 0 0 3 1 0 1 #> [7808] 0 3 1 1 0 1 1 0 1 2 1 2 1 0 0 2 0 0 2 2 3 1 0 1 2 1 3 1 3 3 2 1 2 2 2 3 2 #> [7845] 1 2 0 3 3 2 2 2 2 2 3 1 3 3 3 3 1 3 2 1 1 3 1 3 2 2 3 1 2 3 2 3 3 2 1 1 1 #> [7882] 1 3 3 1 0 1 2 3 3 2 1 3 3 2 2 2 2 3 1 2 1 3 3 2 3 3 1 3 3 1 3 3 1 1 2 2 3 #> [7919] 2 1 3 1 0 2 1 3 1 3 3 1 1 1 1 3 2 0 1 1 1 1 0 3 1 2 2 2 1 1 2 2 2 1 1 3 1 #> [7956] 0 3 3 3 2 3 2 2 2 3 2 1 1 3 0 3 3 1 2 1 3 2 0 1 3 3 1 2 2 2 3 3 2 1 1 2 3 #> [7993] 0 3 0 1 2 2 3 2 1 3 3 2 1 2 2 2 3 2 0 1 1 3 2 2 3 3 0 2 1 2 0 3 2 1 3 1 1 #> [8030] 1 2 3 1 3 2 3 1 0 3 3 1 3 2 3 2 0 3 1 3 2 0 1 3 1 0 3 1 1 3 1 2 3 0 1 0 2 #> [8067] 2 3 1 3 3 1 1 3 1 3 3 1 2 3 3 0 1 2 2 3 2 1 2 0 0 3 3 3 1 3 2 2 3 2 2 3 2 #> [8104] 2 2 2 2 3 2 0 3 2 2 3 3 1 2 0 3 1 2 3 3 0 1 2 3 3 1 3 0 1 3 1 1 2 2 3 2 3 #> [8141] 2 0 0 3 2 3 3 3 2 2 1 3 1 3 1 2 2 2 3 1 2 1 0 3 3 3 3 3 1 3 3 1 1 2 1 3 1 #> [8178] 2 3 2 3 2 1 3 2 0 3 1 2 3 2 1 3 2 1 1 3 1 3 3 3 3 1 3 3 2 3 3 3 2 0 2 2 2 #> [8215] 3 3 0 1 2 3 3 1 1 2 2 3 1 2 3 1 2 2 2 0 3 2 1 2 1 2 2 3 3 1 2 3 3 1 3 0 3 #> [8252] 3 3 3 1 1 2 2 1 2 0 2 2 3 2 2 2 1 1 2 1 2 1 2 2 3 1 1 3 1 0 1 3 3 1 2 3 1 #> [8289] 0 1 3 3 1 3 0 1 1 3 0 1 3 2 2 2 2 3 1 2 3 3 1 0 3 2 2 2 3 1 3 1 2 3 2 1 3 #> [8326] 1 1 2 1 2 0 1 2 3 2 3 3 1 3 2 1 1 1 2 3 2 2 0 3 1 1 1 1 0 1 3 2 2 2 1 2 3 #> [8363] 1 0 0 1 3 3 3 0 3 0 0 2 1 3 3 2 1 2 3 3 1 3 2 0 1 1 1 3 2 1 3 2 1 3 0 2 3 #> [8400] 1 2 2 3 1 3 2 2 2 2 3 1 2 1 2 0 3 1 3 2 2 3 3 2 1 2 1 1 2 0 0 2 3 1 2 1 3 #> [8437] 3 0 3 2 3 3 1 3 0 3 2 2 1 0 1 0 2 3 1 2 3 1 3 2 2 2 2 0 2 1 1 1 1 3 3 1 2 #> [8474] 3 3 2 3 3 2 2 2 3 0 2 3 3 3 2 3 2 3 2 0 3 1 2 3 3 1 3 1 2 3 3 3 1 0 0 1 0 #> [8511] 1 3 3 2 2 3 1 1 3 2 2 2 0 3 2 0 3 1 3 0 3 0 3 3 0 1 3 3 2 2 2 2 1 3 2 3 2 #> [8548] 0 0 0 2 1 3 2 2 3 2 0 3 3 3 1 2 1 3 3 3 3 0 2 0 3 1 0 3 3 1 2 2 2 2 3 3 3 #> [8585] 2 2 3 3 2 2 0 3 3 0 3 3 2 3 2 2 2 1 3 2 1 3 3 2 2 2 0 3 2 3 1 0 2 3 3 0 1 #> [8622] 2 2 3 1 2 3 3 3 1 3 3 3 3 2 2 3 2 0 2 3 0 2 1 0 3 3 0 1 3 3 2 3 3 2 2 2 3 #> [8659] 2 3 1 1 3 0 0 2 0 0 2 2 3 3 2 2 2 0 3 1 3 3 2 2 3 3 3 0 0 0 1 1 3 2 2 0 2 #> [8696] 1 2 1 1 3 3 3 0 0 2 3 2 0 3 0 0 1 1 0 1 2 3 3 2 1 3 0 3 2 3 2 2 2 3 3 3 1 #> [8733] 3 3 0 3 3 0 1 2 3 3 0 2 2 2 3 3 3 2 2 0 1 3 0 1 1 0 2 3 0 2 1 3 2 1 0 3 0 #> [8770] 3 0 0 3 2 2 2 2 3 1 0 3 1 2 2 3 0 2 2 3 1 3 2 3 3 3 1 2 2 0 3 0 3 1 2 1 2 #> [8807] 1 2 1 2 1 1 1 0 2 2 0 2 1 2 0 3 3 2 2 2 0 1 1 3 3 2 1 3 2 2 2 3 3 2 3 3 2 #> [8844] 2 3 2 2 2 3 0 1 3 3 3 3 3 1 2 0 2 2 3 3 2 3 0 3 1 2 3 2 2 1 3 1 3 1 1 3 2 #> [8881] 3 1 3 0 2 3 1 3 3 2 2 3 2 1 1 3 3 1 2 3 3 1 0 0 1 3 3 1 1 2 2 1 2 2 2 2 2 #> [8918] 1 0 3 2 2 2 3 2 1 2 2 2 3 1 2 3 0 3 3 3 3 1 2 2 2 2 3 1 0 3 2 3 1 2 1 2 2 #> [8955] 2 2 1 3 0 1 2 1 3 3 3 3 1 1 2 2 1 2 1 2 3 0 2 3 2 2 2 2 3 3 2 2 3 2 0 1 3 #> [8992] 3 2 3 2 3 2 2 1 3 3 3 1 1 2 0 3 0 1 1 0 2 3 2 3 2 3 2 3 3 2 2 0 1 1 1 1 1 #> [9029] 1 1 0 3 2 1 1 3 3 2 2 2 1 3 2 1 3 3 0 3 1 0 2 1 0 3 3 1 2 2 0 2 3 0 2 0 3 #> [9066] 2 0 3 1 3 0 0 2 2 1 1 1 3 1 0 1 3 3 2 0 2 3 0 3 1 3 3 2 0 3 2 1 2 2 2 1 2 #> [9103] 0 3 #> Levels: 0 1 2 3     # labels = c(\"age_1\",\"age_2\",\"age_3\", \"age_4\"), include.lowest = TRUE)"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://um-kevinhe.github.io/surtvep/index.html/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lingfeng Luo. Author. Wenbo Wu. Author. Xueting Tao. Author, maintainer.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Luo L, Wu W, Tao X (2022). surtvep: Cox Non-proportional Hazards model penalization. https://github.com/UM-KevinHe/surtvep, https://um-kevinhe.github.io/surtvep/.","code":"@Manual{,   title = {surtvep: Cox Non-proportional Hazards model with penalization},   author = {Lingfeng Luo and Wenbo Wu and Xueting Tao},   year = {2022},   note = {https://github.com/UM-KevinHe/surtvep, https://um-kevinhe.github.io/surtvep/}, }"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/index.html","id":"surtvep","dir":"","previous_headings":"","what":"Cox Non-proportional Hazards model with penalization","title":"Cox Non-proportional Hazards model with penalization","text":"“surtvep” R package time-varying effects analysis large-scale time--event data, including Newton’s method, Proximal Newton’s method combination P-spline smoothing-spline. mAIC, TIC, GIC cross-validation provided choose penalization coefficient.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started","title":"Cox Non-proportional Hazards model with penalization","text":"First can install ‘surtvep’ via: recommend start 01 introduction, explains general usage package terms data preprocessing, model training evaluation procedure. Large-scale time--event data derived national disease registries arise rapidly medical studies. Detecting accounting time-varying effects particularly important, time-varying effects already reported clinical literature. However, formal R packages estimating time-varying effect without pre-assuming time-dependent function. However, real dataset, get pre-assuming incorrect, estimation largely influenced assumption. Thus, decided develop time-varying model using spline terms penalization don’t need pre-assumption true time-dependent function implemented R. Following benefits packages: begin , traditional methods modeling time-varying survival models typically rely expanding original data repeated measurement format, , even moderate sample size, usually leads intractably large working dataset. Consequently, computational burden increases dramatically sample size grows, precluding evaluation time-varying effects large-scale studies, thus, propose computationally efficient Kronecker product-based proximal algorithm, enables us extend existing methods estimating time-varying effects time--event data large-scale context. Detailed information method found . Also, allowing parallel computing, packages handle moderate large sample size quite well compared current methods compare end page. Specifically, data analysis include number binary covariates near-zero variation (e.g., SEER prostate cancer data, 0.6% 716,553 patients tumors regional lymph nodes), associated observed information matrix Newton-type method may minimum eigenvalue close zero large condition number. Inverting nearly singular matrix numerically unstable corresponding Newton updates likely conned within small neighborhood initial value, causing estimates far optimal solutions. However, proposed Proximal-Newtown method handle problem quite well adding (describe edited Hessian matrix)","code":"#Install the package, need to install the devtools packages: install.packages(\"devtools\") require(\"remotes\") remotes::install_github(\"UM-KevinHe/surtvep\", ref = \"openmp\")  #To install with Vignettes: install.packages(\"devtools\") remotes::install_github(\"UM-KevinHe/surtvep\", ref = \"openmp\", build_vignettes =T)"},{"path":[]},{"path":[]},{"path":"https://um-kevinhe.github.io/surtvep/index.html/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage:","title":"Cox Non-proportional Hazards model with penalization","text":", using Simulation study included packages example","code":"library(surtvep)  #Load Simulation study sim_data=sim_data #Clean and create label and covariate matrix for the package: event=sim_data[,\"event\"] time=sim_data[,\"time\"] data=sim_data[,!colnames(sim_data) %in% c(\"event\",\"time\")]  #Fit the model(Time varying model without penalty)  fit <- coxtp(event = event, z = data, time = time) coxtp.plot(fit,coef=\"V1\")"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/index.html","id":"datasets","dir":"","previous_headings":"","what":"Datasets","title":"Cox Non-proportional Hazards model with penalization","text":"SUPPORT dataset available “surtvep” package. following code load dataset form dataframe","code":"data(\"support\")"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/index.html","id":"simulated-datasets","dir":"","previous_headings":"","what":"Simulated Datasets:","title":"Cox Non-proportional Hazards model with penalization","text":"","code":"<tr>     <td>simulN2kOP2Binary<\/td>     <td>100,000<\/td>     <td>     Dataset from simulation study in <a href=\"#references\">[12]<\/a>.     This is a discrete time dataset with 1000 possible event-times.     <\/td>     <td><a href=\"https://github.com/havakv/pycox/tree/master/pycox/simulations/discrete_logit_hazard.py\">simulN2kOP2Binary<\/a> <\/tr>"},{"path":[]},{"path":"https://um-kevinhe.github.io/surtvep/index.html/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cox Non-proportional Hazards model with penalization","text":"Note: package still early stages development, please don’t hesitate report problems may experience. package works R 4.1.0+. can install ‘surtvep’ via: recommand start tutorial, explains general usage package terms preprocessing, model training, penalziation parameter selection evalutaion procedure.","code":"#Install the package, need to install the devtools packages: install.packages(\"devtools\") require(\"remotes\") remotes::install_github(\"UM-KevinHe/surtvep\", ref = \"openmp\")  #To install with Vignettes: install.packages(\"devtools\") remotes::install_github(\"UM-KevinHe/surtvep\", ref = \"openmp\", build_vignettes =T)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/index.html","id":"detailed-tutorial","dir":"","previous_headings":"","what":"Detailed tutorial","title":"Cox Non-proportional Hazards model with penalization","text":"detailed tutorial model paramter explaination, please go ","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help:","title":"Cox Non-proportional Hazards model with penalization","text":"encounter problems bugs, please contact us : lfluo@umich.edu, xuetao@umich.edu","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Cox Non-proportional Hazards model with penalization","text":"[1] Wenbo Wu, Jeremy M G Taylor, Andrew F Brouwer, Lingfeng Luo, Jian Kang, Hui Jiang Kevin . Scalable proximal Methods cause-specific hazard modeling time-varying coefficients. Lifetime Data Analysis, 28(2):194-218, 2022. [paper]","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/confint.coxtp.html","id":null,"dir":"Reference","previous_headings":"","what":"get confidence interval from a 'coxtp' object — confint.coxtp","title":"get confidence interval from a 'coxtp' object — confint.coxtp","text":"get confidence interval 'coxtp' object","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/confint.coxtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get confidence interval from a 'coxtp' object — confint.coxtp","text":"","code":"# S3 method for coxtp confint(fit, times, parm, level = 0.95)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/confint.coxtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get confidence interval from a 'coxtp' object — confint.coxtp","text":"fit fitted \"coxtp\" model times time interval estamtied. default value time fitted model parm names parameter level confidence level. Default 0.95.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/confint.coxtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get confidence interval from a 'coxtp' object — confint.coxtp","text":"","code":"data(ExampleData) z <- ExampleData$x time <- ExampleData$time event <- ExampleData$event fit <- coxtp(event = event, z = z, time = time) #> Iter 1: Obj fun = -3.2982771; Stopping crit = 1.0000000e+00; #> Iter 2: Obj fun = -3.2916285; Stopping crit = 2.1424865e-02; #> Iter 3: Obj fun = -3.2916034; Stopping crit = 8.0884492e-05; #> Iter 4: Obj fun = -3.2916034; Stopping crit = 1.8232153e-09; #> Iter 5: Obj fun = -3.2916034; Stopping crit = 2.2895367e-14; confit(fit) #> Error in confit(fit): could not find function \"confit\""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/confint.coxtv.html","id":null,"dir":"Reference","previous_headings":"","what":"get confidence interval from a 'coxtv' object — confint.coxtv","title":"get confidence interval from a 'coxtv' object — confint.coxtv","text":"get confidence interval 'coxtv' object","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/confint.coxtv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get confidence interval from a 'coxtv' object — confint.coxtv","text":"","code":"# S3 method for coxtv confint(fit, times, parm, level = 0.95, ...)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/confint.coxtv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get confidence interval from a 'coxtv' object — confint.coxtv","text":"fit fitted \"coxtv\" model times time interval estamtied. default value time fitted model parm names parameter level confidence level. Default 0.95.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/confint.coxtv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get confidence interval from a 'coxtv' object — confint.coxtv","text":"","code":"data(ExampleData) z <- ExampleData$x time <- ExampleData$time event <- ExampleData$event fit <- coxtv(event = event, z = z, time = time) #> Iter 1: Obj fun = -3.2982771; Stopping crit = 2.8599513e-01; #> Iter 2: Obj fun = -3.2916285; Stopping crit = 6.4033714e-03; #> Iter 3: Obj fun = -3.2916034; Stopping crit = 2.5024973e-05; #> Iter 4: Obj fun = -3.2916034; Stopping crit = 5.6581492e-10; confit(fit) #> Error in confit(fit): could not find function \"confit\""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.base.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox Non-proportional Hazards model: — coxtp.base","title":"Cox Non-proportional Hazards model: — coxtp.base","text":"Descritpion (...)","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox Non-proportional Hazards model: — coxtp.base","text":"","code":"coxtp.base(   formula,   data,   spline = \"Smooth-spline\",   nsplines = 8,   ties = \"Breslow\",   control,   ... )"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox Non-proportional Hazards model: — coxtp.base","text":"spline spline term Penalized Newton's Method(Add section Number related paper). Default setting spline=\"Smooth-spline\" nsplines Number base functions B-splines, default 8. ties Ways deal ties, default ties=\"Breslow\": event event vector, vector containing 0 1 z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector. tol Convergence threshold. default threshold set tol=1e-6 iter.max Maximum Iteration number, default iter.max=20L method Selecting Method used, default method=\"Newton\" lambda Parameter Proximal Newton's Method. Default lambda=1e8 btr Backtracking line search approach, default btr=\"static\": tau (Alpha beta?) Newton's Method, Default tau=0.5. Used control step size. stop Stopping rule, default stop=\"ratch\": parallel Parallel computation, Default parallel=FALSE threads Parallel computation parameter(number cores)Default threads=1L degree Degree smoothing spline. Default setting degree=3L. ord Specify derivative penalize. Default setting ord=4. fixedstep might times stopping criteria working, thus, number steps set manually. Default value fixedstep = FALSE, true, stop iter.max","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.base.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cox Non-proportional Hazards model: — coxtp.base","text":"put link wesite()...","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating Baseline hazard using the result from coxtp() — coxtp.baseline","title":"Calculating Baseline hazard using the result from coxtp() — coxtp.baseline","text":"Calculating Baseline hazard using result coxtp()","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating Baseline hazard using the result from coxtp() — coxtp.baseline","text":"","code":"coxtp.baseline(fit, delta, z, time, strata = c())"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating Baseline hazard using the result from coxtp() — coxtp.baseline","text":"fit Model get coxtp delta event vector, vector containing 0 1 z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.html","id":null,"dir":"Reference","previous_headings":"","what":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline: — coxtp","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline: — coxtp","text":"Fit cox Non-proportional Hazards model via penalized maximum likelihood.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline: — coxtp","text":"","code":"coxtp(   event,   z,   time,   strata = c(),   spline = \"Smooth-spline\",   nsplines = 8,   ties = \"Breslow\",   tol = 1e-09,   iter.max = 20L,   method = \"ProxN\",   lambda = 1e+08,   btr = \"dynamic\",   tau = 0.5,   stop = \"ratch\",   parallel = FALSE,   threads = 1L,   degree = 3L,   TIC_prox = FALSE,   lambda.spline = 0,   ord = 4,   fixedstep = FALSE,   InfoCrit = TRUE,   ... )"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline: — coxtp","text":"event event vector, vector containing 0 1 z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector. spline spline term Penalized Newton's Method(Add section Number related paper). Default setting spline=\"Smooth-spline\" nsplines Number base functions B-splines, default 8. ties Ways deal ties, default ties=\"Breslow\": tol Convergence threshold. default threshold set tol=1e-6 iter.max Maximum Iteration number, default iter.max=20L method Selecting Method used, default method=\"ProxN\" lambda Parameter Proximal Newton's Method. Default lambda=1e8 btr Backtracking line search approach, default btr=\"dynamic\": tau Newton's Method, Default tau=0.5. Used control step size. stop Stopping rule, default stop=\"ratch\". parallel Parallel computation, Default parallel=FALSE threads Parallel computation parameter(number cores)Default threads=1L degree Degree smoothing spline. Default setting degree=3L. TIC_prox calculating information criteria, might numerical issue(second order derivative, Hessian matrix approximate singular), thus proposed add small term diagonal. Default TIC_prox = FALSE lambda.spline Smoothing parameter lambda. Default lambda.spline = 0 refers Newton's Method without penalization. ord Specify derivative penalize. Default setting ord=4. fixedstep might times stopping criteria working, thus, number steps set manually. Default value fixedstep = FALSE, true, stop iter.max ICLastOnly calculate last information criteria TRUE. Default ICLastOnly=FALSE","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline: — coxtp","text":"object S3 class \"coxtp\". ctrl.pts estimated covariate coefficient theta.list estimated covariate function across iterations VarianceMatrix variance matrix estimated function internal.knots internal knot locations info second order derivative","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline: — coxtp","text":"put link wesite()...","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline: — coxtp","text":"","code":"data(ExampleData) z <- ExampleData$x time  <- ExampleData$time event <- ExampleData$event  lambda.spline  = c(0,1) fit   <- coxtp(event = event, z = z, time = time, lambda.spline=lambda.spline) #> Error in coxtp(event = event, z = z, time = time, lambda.spline = lambda.spline): unused argument (lambda.spline = lambda.spline)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from coxtp() function — coxtp.plot","title":"Plotting result from coxtp() function — coxtp.plot","text":"Plotting result coxtp() function","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from coxtp() function — coxtp.plot","text":"","code":"coxtp.plot(fit, IC = \"AIC\", coef)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from coxtp() function — coxtp.plot","text":"fit Model get coxtp IC Creteria selected plotting coef variable needed plotted","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — coxtp.predict","title":"Title — coxtp.predict","text":"Title","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — coxtp.predict","text":"","code":"coxtp.predict(fit, baseline, newdata = c(), strata = FALSE, out_seq = NULL)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtp.predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — coxtp.predict","text":"fit Model get coxtp baseline Baseline estimation coxtp.baseline arbitary baseline entered newdata New data vector strata Whether stratification dataset, default FALSE. out_seq Output time sequence. Default out_seq=NULL. default, output time sequence according input fit","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating Baseline hazard using the result from a coxtv object — coxtv.baseline","title":"Calculating Baseline hazard using the result from a coxtv object — coxtv.baseline","text":"Calculating Baseline hazard using result coxtv object","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating Baseline hazard using the result from a coxtv object — coxtv.baseline","text":"","code":"coxtv.baseline(fit, event, z, time, strata = NULL, ...)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating Baseline hazard using the result from a coxtv object — coxtv.baseline","text":"fit Model get coxtp z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector. delta event vector, vector containing 0 1","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating Baseline hazard using the result from a coxtv object — coxtv.baseline","text":"list components time unique event time points hazard baseline hazard corresponding unqiue time point cumulHaz cumulative baseline hazard corresponding unqiue time point","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating Baseline hazard using the result from a coxtv object — coxtv.baseline","text":"","code":"data(\"ExampleDataBinary\") z <- ExampleDataBinary$x time <- ExampleDataBinary$time event <- ExampleDataBinary$event fit <- coxtv(event = event, z = z, time = time) #> Iter 1: Obj fun = -3.8237925; Stopping crit = 1.4378429e-01; #> Iter 2: Obj fun = -3.7957752; Stopping crit = 2.7572785e-02; #> Iter 3: Obj fun = -3.7954273; Stopping crit = 3.3901564e-04; #> Iter 4: Obj fun = -3.7954266; Stopping crit = 7.2846313e-07; #> Iter 5: Obj fun = -3.7954266; Stopping crit = 9.0573253e-12; base.est = coxtv.baseline(fit, event, z, time) #> Error in coxtv.baseline(fit, event, z, time): could not find function \"coxtv.baseline\""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.html","id":null,"dir":"Reference","previous_headings":"","what":"fit a cox Non-proportional Hazards model: — coxtv","title":"fit a cox Non-proportional Hazards model: — coxtv","text":"Fit cox Non-proportional Hazards model via maximum likelihood.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit a cox Non-proportional Hazards model: — coxtv","text":"","code":"coxtv(   event,   z,   time,   strata = NULL,   spline = \"P-spline\",   nsplines = 8,   ties = \"Breslow\",   control,   ... )"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit a cox Non-proportional Hazards model: — coxtv","text":"event event vector, vector containing 0 1 z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector. spline spline term Penalized Newton's Method(Add section Number related paper). Default setting spline=\"Smooth-spline\" nsplines Number base functions B-splines, default 8. ties Ways deal ties, default ties=\"Breslow\": tol Convergence threshold. default threshold set tol=1e-6 iter.max Maximum Iteration number, default iter.max=20L method Selecting Method used, default method=\"Newton\" lambda Parameter Proximal Newton's Method. Default lambda=1e8 btr Backtracking line search approach, default btr=\"static\": tau (Alpha beta?) Newton's Method, Default tau=0.5. Used control step size. stop Stopping rule, default stop=\"ratch\": parallel Parallel computation, Default parallel=FALSE threads Parallel computation parameter(number cores)Default threads=1L degree Degree smoothing spline. Default setting degree=3L. ord Specify derivative penalize. Default setting ord=4. fixedstep might times stopping criteria working, thus, number steps set manually. Default value fixedstep = FALSE, true, stop iter.max","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit a cox Non-proportional Hazards model: — coxtv","text":"object S3 class \"coxtv\". ctrl.pts estimated covariate coefficient theta.list estimated covariate function across iterations VarianceMatrix variance matrix estimated function internal.knots internal knot locations info second order derivative","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fit a cox Non-proportional Hazards model: — coxtv","text":"put link wesite()...","code":""},{"path":[]},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/coxtv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fit a cox Non-proportional Hazards model: — coxtv","text":"","code":"data(ExampleData) z <- ExampleData$x time <- ExampleData$time event <- ExampleData$event fit <- coxtv(event = event, z = z, time = time) #> Iter 1: Obj fun = -3.2982771; Stopping crit = 2.8599513e-01; #> Iter 2: Obj fun = -3.2916285; Stopping crit = 6.4033714e-03; #> Iter 3: Obj fun = -3.2916034; Stopping crit = 2.5024973e-05; #> Iter 4: Obj fun = -3.2916034; Stopping crit = 5.6581492e-10;"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/cv.coxtp.html","id":null,"dir":"Reference","previous_headings":"","what":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline, penalization coefficient is provided by cross validation — cv.coxtp","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline, penalization coefficient is provided by cross validation — cv.coxtp","text":"Fit cox Non-proportional Hazards model via penalized maximum likelihood.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/cv.coxtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline, penalization coefficient is provided by cross validation — cv.coxtp","text":"","code":"cv.coxtp(   event,   z,   time,   strata = c(),   spline = \"Smooth-spline\",   nsplines = 8,   ties = \"Breslow\",   tol = 1e-09,   iter.max = 20L,   method = \"ProxN\",   lambda = 1e+08,   btr = \"dynamic\",   tau = 0.5,   stop = \"ratch\",   parallel = FALSE,   threads = 1L,   degree = 3L,   TIC_prox = FALSE,   lambda.spline = 0,   ord = 4,   fixedstep = FALSE )"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/cv.coxtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline, penalization coefficient is provided by cross validation — cv.coxtp","text":"event event vector, vector containing 0 1 z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector. spline spline term Penalized Newton's Method(Add section Number related paper). Default setting spline=\"Smooth-spline\" nsplines Number base functions B-splines, default 8. ties Ways deal ties, default ties=\"Breslow\": tol Convergence threshold. default threshold set tol=1e-6 iter.max Maximum Iteration number, default iter.max=20L method Selecting Method used, default method=\"ProxN\" lambda Parameter Proximal Newton's Method. Default lambda=1e8 btr Backtracking line search approach, default btr=\"dynamic\": tau Newton's Method, Default tau=0.5. Used control step size. stop Stopping rule, default stop=\"ratch\". parallel Parallel computation, Default parallel=FALSE threads Parallel computation parameter(number cores)Default threads=1L degree Degree smoothing spline. Default setting degree=3L. TIC_prox calculating information criteria, might numerical issue(second order derivative, Hessian matrix approximate singular), thus proposed add small term diagonal. Default TIC_prox = FALSE lambda.spline Smoothing parameter lambda. Default lambda.spline = 0 refers Newton's Method without penalization. ord Specify derivative penalize. Default setting ord=4. fixedstep might times stopping criteria working, thus, number steps set manually. Default value fixedstep = FALSE, true, stop iter.max ICLastOnly calculate last information criteria TRUE. Default ICLastOnly=FALSE","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/cv.coxtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline, penalization coefficient is provided by cross validation — cv.coxtp","text":"model.cv \"coxtp\" object penalization coefficient chosen based cross validation lambda.selected selected penalization coefficients different information criteria","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/cv.coxtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline, penalization coefficient is provided by cross validation — cv.coxtp","text":"","code":"data(ExampleData) z <- ExampleData$x time  <- ExampleData$time event <- ExampleData$event  lambda.spline  = c(0,1) fit   <- ic.coxtp(event = event, z = z, time = time, lambda.spline=lambda.spline) #> Error in ic.coxtp(event = event, z = z, time = time, lambda.spline = lambda.spline): could not find function \"ic.coxtp\""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ExampleData.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data for surtvep with 4000 observations of 2 variables: — ExampleData","title":"Example data for surtvep with 4000 observations of 2 variables: — ExampleData","text":"simulated data set containing two 2 variables.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ExampleData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data for surtvep with 4000 observations of 2 variables: — ExampleData","text":"","code":"data(ExampleData)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ExampleData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data for surtvep with 4000 observations of 2 variables: — ExampleData","text":"List containing following elements: x Simulated covariate V1 v2, Continuous variable. True time-independent function b(t)=1 true time-dependent function b(t)=sin(3pit/4) event Simulated event variable, Binary varible 0, 1 time Simulated time variable, Continous variable non-negative value","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ExampleDataBinary.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data for surtvep with 2000 observations of 2 binary variables: — ExampleDataBinary","title":"Example data for surtvep with 2000 observations of 2 binary variables: — ExampleDataBinary","text":"simulated data set containing two 2 variables.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ExampleDataBinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data for surtvep with 2000 observations of 2 binary variables: — ExampleDataBinary","text":"","code":"data(ExampleDataBinary)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ExampleDataBinary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data for surtvep with 2000 observations of 2 binary variables: — ExampleDataBinary","text":"List containing following elements: V1 Simulated covariate V1, Binary variable. True time-dependent function b(t)=1 V2 Simulated covariate V2, Binary variable. True time-dependent function b(t)=exp(-1.5*t) event Simulated event variable, Binary varible 0, 1 time Simulated time variable, Continous variable non-negative value","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ic.coxtp.html","id":null,"dir":"Reference","previous_headings":"","what":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline. Information criteria is also provided. — ic.coxtp","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline. Information criteria is also provided. — ic.coxtp","text":"Fit cox Non-proportional Hazards model via penalized maximum likelihood.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ic.coxtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline. Information criteria is also provided. — ic.coxtp","text":"","code":"ic.coxtp(   event,   z,   time,   strata = c(),   spline = \"Smooth-spline\",   nsplines = 8,   ties = \"Breslow\",   tol = 1e-09,   iter.max = 20L,   method = \"ProxN\",   lambda = 1e+08,   btr = \"dynamic\",   tau = 0.5,   stop = \"ratch\",   parallel = FALSE,   threads = 1L,   degree = 3L,   TIC_prox = FALSE,   lambda.spline = 0,   ord = 4,   fixedstep = FALSE )"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ic.coxtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline. Information criteria is also provided. — ic.coxtp","text":"event event vector, vector containing 0 1 z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector. spline spline term Penalized Newton's Method(Add section Number related paper). Default setting spline=\"Smooth-spline\" nsplines Number base functions B-splines, default 8. ties Ways deal ties, default ties=\"Breslow\": tol Convergence threshold. default threshold set tol=1e-6 iter.max Maximum Iteration number, default iter.max=20L method Selecting Method used, default method=\"ProxN\" lambda Parameter Proximal Newton's Method. Default lambda=1e8 btr Backtracking line search approach, default btr=\"dynamic\": tau Newton's Method, Default tau=0.5. Used control step size. stop Stopping rule, default stop=\"ratch\". parallel Parallel computation, Default parallel=FALSE threads Parallel computation parameter(number cores)Default threads=1L degree Degree smoothing spline. Default setting degree=3L. TIC_prox calculating information criteria, might numerical issue(second order derivative, Hessian matrix approximate singular), thus proposed add small term diagonal. Default TIC_prox = FALSE lambda.spline Smoothing parameter lambda. Default lambda.spline = 0 refers Newton's Method without penalization. ord Specify derivative penalize. Default setting ord=4. fixedstep might times stopping criteria working, thus, number steps set manually. Default value fixedstep = FALSE, true, stop iter.max ICLastOnly calculate last information criteria TRUE. Default ICLastOnly=FALSE","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ic.coxtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline. Information criteria is also provided. — ic.coxtp","text":"model.AIC \"coxtp\" object penalization coefficient chosen based AIC model.TIC \"coxtp\" object penalization coefficient chosen based TIC model.GIC \"coxtp\" object penalization coefficient chosen based GIC lambda.selected selected penalization coefficients different information criteria","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ic.coxtp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline. Information criteria is also provided. — ic.coxtp","text":"put link wesite()...","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/ic.coxtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fit a cox Non-proportional Hazards model with P-spline or Smoothing-spline. Information criteria is also provided. — ic.coxtp","text":"","code":"data(ExampleData) z <- ExampleData$x time  <- ExampleData$time event <- ExampleData$event  lambda.spline  = c(0,1) fit   <- ic.coxtp(event = event, z = z, time = time, lambda.spline=lambda.spline) #> Error in ic.coxtp(event = event, z = z, time = time, lambda.spline = lambda.spline): could not find function \"ic.coxtp\""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtp.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from coxtp() function — plot.coxtp.all","title":"Plotting result from coxtp() function — plot.coxtp.all","text":"Plotting result coxtp() function","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtp.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from coxtp() function — plot.coxtp.all","text":"","code":"# S3 method for coxtp.all plot(   model,   IC = \"AIC\",   times,   CI = TRUE,   level = 0.95,   exponentiate = FALSE,   xlab,   ylab,   xlim,   ylim,   save = FALSE,   allinone = FALSE,   title,   linetype,   fill,   color,   labels,   expand,   ... )"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtp.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from coxtp() function — plot.coxtp.all","text":"IC Criteria selected plot. Default \"AIC\", uses AIC select tunning parameter. times time scale plot CI argument controls confidence interval plot. 'CI' = TRUE, confidence interval plotted. level confidence level. fit Fitted \"coxtp\" model object main function \"coxtp\".","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtp.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting result from coxtp() function — plot.coxtp.all","text":"","code":"data(\"ExampleData\") z     <- ExampleData$x time  <- ExampleData$time event <- ExampleData$event model   <- coxtp(event = event, z = z, time = time, lambda_spline = c(1)) #> Iter 1: Obj fun = -3.7230890; Stopping crit = 1.0000000e+00; #> Iter 2: Obj fun = -3.7159272; Stopping crit = 2.4464280e-02; #> Iter 3: Obj fun = -3.7158723; Stopping crit = 1.8749735e-04; #> Iter 4: Obj fun = -3.7158722; Stopping crit = 3.4945884e-07; #> Iter 5: Obj fun = -3.7158722; Stopping crit = 1.6607763e-12; plot(model, IC = \"AIC\", allinone = TRUE) #> Warning: package 'ggplot2' was built under R version 4.1.3"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from a coxtp object — plot.coxtp","title":"Plotting result from a coxtp object — plot.coxtp","text":"Plotting result coxtp object","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from a coxtp object — plot.coxtp","text":"","code":"# S3 method for coxtp plot(   fit,   times,   parm,   CI = TRUE,   level = 0.95,   exponentiate = FALSE,   xlab,   ylab,   xlim,   ylim,   save = FALSE,   allinone = FALSE,   title,   linetype,   fill,   color,   labels,   expand,   ... )"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from a coxtp object — plot.coxtp","text":"fit Model get coxtp","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting result from a coxtp object — plot.coxtp","text":"","code":"data(ExampleData) z <- ExampleData$x time <- ExampleData$time event <- ExampleData$event fit <- coxtp(event = event, z = z, time = time) #> Iter 1: Obj fun = -3.2982771; Stopping crit = 1.0000000e+00; #> Iter 2: Obj fun = -3.2916285; Stopping crit = 2.1424865e-02; #> Iter 3: Obj fun = -3.2916034; Stopping crit = 8.0884492e-05; #> Iter 4: Obj fun = -3.2916034; Stopping crit = 1.8232153e-09; #> Iter 5: Obj fun = -3.2916034; Stopping crit = 2.2895367e-14; plot(fit) #> Warning: package 'ggplot2' was built under R version 4.1.3"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from a coxtv object — plot.coxtv","title":"Plotting result from a coxtv object — plot.coxtv","text":"Plotting result coxtv object","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from a coxtv object — plot.coxtv","text":"","code":"# S3 method for coxtv plot(   fit,   times,   parm,   CI = TRUE,   level = 0.95,   exponentiate = FALSE,   xlab,   ylab,   xlim,   ylim,   save = FALSE,   allinone = FALSE,   title,   linetype,   fill,   color,   labels,   expand,   ... )"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from a coxtv object — plot.coxtv","text":"fit Model get coxtv","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.coxtv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting result from a coxtv object — plot.coxtv","text":"","code":"data(ExampleData) z <- ExampleData$x time <- ExampleData$time event <- ExampleData$event fit <- coxtv(event = event, z = z, time = time) #> Iter 1: Obj fun = -3.2982771; Stopping crit = 2.8599513e-01; #> Iter 2: Obj fun = -3.2916285; Stopping crit = 6.4033714e-03; #> Iter 3: Obj fun = -3.2916034; Stopping crit = 2.5024973e-05; #> Iter 4: Obj fun = -3.2916034; Stopping crit = 5.6581492e-10; plot(fit)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.ic.coxtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from a ic.coxtp object — plot.ic.coxtp","title":"Plotting result from a ic.coxtp object — plot.ic.coxtp","text":"Plotting result ic.coxtp object","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.ic.coxtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from a ic.coxtp object — plot.ic.coxtp","text":"","code":"# S3 method for ic.coxtp plot(   model,   IC = \"AIC\",   times,   CI = TRUE,   level = 0.95,   exponentiate = FALSE,   xlab,   ylab,   xlim,   ylim,   save = FALSE,   allinone = FALSE,   title,   linetype,   fill,   color,   labels,   expand,   ... )"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.ic.coxtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from a ic.coxtp object — plot.ic.coxtp","text":"IC Criteria selected plot. Default \"AIC\", uses AIC select tunning parameter. times time scale plot CI argument controls confidence interval plot. 'CI' = TRUE, confidence interval plotted. level confidence level. fit Fitted \"coxtp\" model object main function \"coxtp\".","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/plot.ic.coxtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting result from a ic.coxtp object — plot.ic.coxtp","text":"","code":"data(\"ExampleData\") z     <- ExampleData$x time  <- ExampleData$time event <- ExampleData$event model   <- coxtp(event = event, z = z, time = time, lambda_spline = c(1)) #> Iter 1: Obj fun = -3.3017443; Stopping crit = 1.0000000e+00; #> Iter 2: Obj fun = -3.2954100; Stopping crit = 2.0664261e-02; #> Iter 3: Obj fun = -3.2953323; Stopping crit = 2.5346890e-04; #> Iter 4: Obj fun = -3.2953321; Stopping crit = 4.6097119e-07; #> Iter 5: Obj fun = -3.2953321; Stopping crit = 1.7713469e-12; plot(model, IC = \"AIC\", allinone = TRUE)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data for surtvep with 5000 observations of 4 variables: — sim_data","title":"Example data for surtvep with 5000 observations of 4 variables: — sim_data","text":"Example data surtvep 5000 observations 4 variables:","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data for surtvep with 5000 observations of 4 variables: — sim_data","text":"","code":"sim_data"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/sim_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data for surtvep with 5000 observations of 4 variables: — sim_data","text":"data.frame V1 Simulated covariate V1, Binary variable 0, 1. True time-dependent function b(t)=1 V2 Simulated covariate V2, Binary variable 0, 1. True time-dependent function b(t)=exp(-1.5*t) event Simulated event variable, Binary varible 0, 1 time Simulated time variable, Continous variable non-negative value","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/sim_data_p5.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data for surtvep with 5000 observations of 7 variables: — sim_data_p5","title":"Example data for surtvep with 5000 observations of 7 variables: — sim_data_p5","text":"Example data surtvep 5000 observations 7 variables:","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/sim_data_p5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data for surtvep with 5000 observations of 7 variables: — sim_data_p5","text":"","code":"sim_data_p5"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/sim_data_p5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data for surtvep with 5000 observations of 7 variables: — sim_data_p5","text":"data.frame 5000 observations 7 variables:","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/sim_data_p5_f5.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data for surtvep with 5000 observations of 8 variables(With strata): — sim_data_p5_f5","title":"Example data for surtvep with 5000 observations of 8 variables(With strata): — sim_data_p5_f5","text":"Example data surtvep 5000 observations 8 variables(strata):","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/sim_data_p5_f5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data for surtvep with 5000 observations of 8 variables(With strata): — sim_data_p5_f5","text":"","code":"sim_data_p5_f5"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/sim_data_p5_f5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data for surtvep with 5000 observations of 8 variables(With strata): — sim_data_p5_f5","text":"data.frame","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/StrataExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data for stratified model illustration — StrataExample","title":"Example data for stratified model illustration — StrataExample","text":"simulated data set containing two 2 variables.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/StrataExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data for stratified model illustration — StrataExample","text":"","code":"data(StrataExample)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/StrataExample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data for stratified model illustration — StrataExample","text":"List containing following elements: x Simulated covariate V1 v2, Continuous variable. True time-dependent function b(t)=1 true time-dependent function b(t)=sin(3pit/4) event Simulated event variable, Binary varible 0, 1 time Simulated time variable, Continous variable non-negative value strata Simulated strata variable, patients different stratums different baseline hazards","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/support.html","id":null,"dir":"Reference","previous_headings":"","what":"Study to Understand Prognoses Preferences Outcomes and Risks of Treatment\r\n(SUPPORT) — support","title":"Study to Understand Prognoses Preferences Outcomes and Risks of Treatment\r\n(SUPPORT) — support","text":"SUPPORT dataset tracks four response variables: hospital death, severe functional disability, hospital costs, time death death . patients followed 5.56 years. Data included tracks follow-time death.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/support.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Study to Understand Prognoses Preferences Outcomes and Risks of Treatment\r\n(SUPPORT) — support","text":"","code":"support"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/support.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Study to Understand Prognoses Preferences Outcomes and Risks of Treatment\r\n(SUPPORT) — support","text":"dataframe 9104 observations 34 variables imputation removal response variables like hospital charges, patient ratio costs charges micro-costs. Ordinal variables, namely functional disability income, also removed. Finally, Surrogate activities daily living removed due sparsity. 6 model scores data-set removed; aps sps kept. Age Stores double representing age. death Death time NDI date: 31DEC94. sex 0=female, 1=male. slos Days study entry discharge. d.time days follow-. dzgroup level dzgroup: ARF/MOSF w/Sepsis, COPD, CHF, Cirrhosis, Coma, Colon Cancer, Lung Cancer, MOSF malignancy. dzclass ARF/MOSF, COPD/CHF/Cirrhosis, Coma cancer disease classes. num.co number comorbidities. edu years education patient. scoma SUPPORT coma score based Glasgow D3. avtisst Average TISS, days 3-25. race Indicates race. White, Black, Asian, Hispanic . hday Day Hospital Study Admit diabetes Diabetes (Com 27-28, Dx 73) dementia Dementia (Comorbidity 6) ca Cancer State meanbp Mean Arterial Blood Pressure Day 3. wblc White blood cell count day 3. hrt Heart rate day 3. resp Respiration Rate day 3. temp Temperature, Celsius, day 3. pafi PaO2/(0.01*FiO2) Day 3. alb Serum albumin day 3. bili Bilirubin Day 3. crea Serum creatinine day 3. sod Serum sodium day 3. ph Serum pH (arteries) day 3. glucose Serum glucose day 3. bun BUN day 3. urine urine output day 3. adlp ADL patient day 3. adlsc Imputed ADL calibrated surrogate, surrogate used follow . sps SUPPORT physiology score aps Apache III physiology score","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/support.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Study to Understand Prognoses Preferences Outcomes and Risks of Treatment\r\n(SUPPORT) — support","text":"Available following website: https://biostat.app.vumc.org/wiki/Main/SupportDesc. note: must unzip process data use. #' @examples data(\"support\")","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/support.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Study to Understand Prognoses Preferences Outcomes and Risks of Treatment\r\n(SUPPORT) — support","text":"original data missing. imputation, total 9105 individuals 47 variables. variables, removed imputation. removed three response variables: hospital charges, patient ratio costs charge,s patient micro-costs. Next, removed hospital death directly informative event interest, namely death. also removed functional disability income ordinal covariates. Finally, removed 8 covariates related results previous findings: removed SUPPORT day 3 physiology score (sps), APACHE III day 3 physiology score (aps), SUPPORT model 2-month survival estimate, SUPPORT model 6-month survival estimate, Physician's 2-month survival estimate pt., Physician's 6-month survival estimate pt., Patient Resuscitate (DNR) order, Day DNR order (<0 study). , sps aps added imputation, missing 1 observation. First imputed manually using normal values physiological measures recommended Knaus et al. (1995). Next, imputed single dataset using mice default settings. imputation, noted covariate surrogate activities daily living imputed. due collinearity two covariates activities daily living. Therefore, surrogate activities daily living removed.","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/surtvier.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from surtvier() function — surtvier.plot","title":"Plotting result from surtvier() function — surtvier.plot","text":"Plotting result surtvier() function","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/surtvier.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from surtvier() function — surtvier.plot","text":"","code":"surtvier.plot(fit, coef)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/surtvier.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from surtvier() function — surtvier.plot","text":"fit Model get coxtp coef variable needed plotted IC Creteria selected plotting","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/tvef.ph.html","id":null,"dir":"Reference","previous_headings":"","what":"test the proportional hazards assumption from a coxtv object — tvef.ph","title":"test the proportional hazards assumption from a coxtv object — tvef.ph","text":"test proportional hazards assumption coxtv object","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/tvef.ph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test the proportional hazards assumption from a coxtv object — tvef.ph","text":"","code":"tvef.ph(fit, parm)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/tvef.ph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test the proportional hazards assumption from a coxtv object — tvef.ph","text":"fit fitted \"coxtv\" \"coxtp\"  model parm names parameter tested","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/tvef.ph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"test the proportional hazards assumption from a coxtv object — tvef.ph","text":"","code":"data(ExampleData) z <- ExampleData$x time <- ExampleData$time event <- ExampleData$event fit <- coxtv(event = event, z = z, time = time) #> Iter 1: Obj fun = -3.2982771; Stopping crit = 2.8599513e-01; #> Iter 2: Obj fun = -3.2916285; Stopping crit = 6.4033714e-03; #> Iter 3: Obj fun = -3.2916034; Stopping crit = 2.5024973e-05; #> Iter 4: Obj fun = -3.2916034; Stopping crit = 5.6581492e-10; tvef.ph(fit) #> Error in tvef.ph(fit): could not find function \"tvef.ph\""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/tvef.zero.html","id":null,"dir":"Reference","previous_headings":"","what":"test the significance of the covariates from a coxtv or coxtp object — tvef.zero","title":"test the significance of the covariates from a coxtv or coxtp object — tvef.zero","text":"test significance covariates coxtv coxtp object","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/tvef.zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test the significance of the covariates from a coxtv or coxtp object — tvef.zero","text":"","code":"tvef.zero(fit, times, parm)"},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/tvef.zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test the significance of the covariates from a coxtv or coxtp object — tvef.zero","text":"fit fitted \"coxtv\" \"coxtp\"  model times time points test covariate significant parm names parameter tested","code":""},{"path":"https://um-kevinhe.github.io/surtvep/index.html/reference/tvef.zero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"test the significance of the covariates from a coxtv or coxtp object — tvef.zero","text":"","code":"data(ExampleData) z <- ExampleData$x time <- ExampleData$time event <- ExampleData$event fit <- coxtv(event = event, z = z, time = time) #> Iter 1: Obj fun = -3.2982771; Stopping crit = 2.8599513e-01; #> Iter 2: Obj fun = -3.2916285; Stopping crit = 6.4033714e-03; #> Iter 3: Obj fun = -3.2916034; Stopping crit = 2.5024973e-05; #> Iter 4: Obj fun = -3.2916034; Stopping crit = 5.6581492e-10; tvef.zero(fit) #> Error in tvef.zero(fit): could not find function \"tvef.zero\""}]
