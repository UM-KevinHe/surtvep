[{"path":[]},{"path":"/articles/Model_Parameters.html","id":"coxtp","dir":"Articles","previous_headings":"1. Functions","what":"1.1 coxtp:","title":"Model Parameters","text":"coxtp(event,z,time,strata=c(),spline=\"P-spline\", nsplines=8, ties=\"Breslow\",tol=1e-9, iter.max=20L, method=\"Newton\", lambda=1e8,factor=10, btr=\"dynamic\", sigma=1e-2, tau=0.6,stop=\"incre\", parallel=FALSE, threads=1L, degree=3L, TIC = FALSE, TIC_prox = FALSE, lambda_spline = 0, ord = 4, fixedstep = FALSE, effectsize = 0, difflambda = FALSE,addsecond = FALSE, penalizestop = FALSE, ICLastOnly = FALSE) main function package coxtp refers “Cox Non-proportional Hazards model penalization”.","code":""},{"path":"/articles/Model_Parameters.html","id":"common-parameters","dir":"Articles","previous_headings":"1. Functions > 1.1 coxtp:","what":"1.1.1 Common Parameters","title":"Model Parameters","text":"coxtp function two required input, formula data. event: Event vector, vector containing 0 1 z: Covariate matrix time: Time vector, vector non-negative numeric value strata: stratification group defined data. exist stratification group, please enter vector.","code":""},{"path":"/articles/Model_Parameters.html","id":"method-related-parameters","dir":"Articles","previous_headings":"1. Functions > 1.1 coxtp:","what":"1.1.2 Method related Parameters:","title":"Model Parameters","text":"offered model estimation penalization without penalization. Detail method found paper(add link ). Following parameters defines model settings: spline: spline term Penalized Newton’s Method(Add section Number related paper). Default setting spline=\"Smooth-spline\" \"P-spline\": P-splines low rank smoother using B-spline basis. Detail information P-spline found (Add section number link) \"Smooth-spline\" : (Add section number link) nsplines : Number base functions B-splines, default 8. method : Selecting Method used, default method=\"Newton\" \"Newton\": Usual Newton’s Approach. \"ProxN\" : Proximal Newton–Raphson Method proposed paper(get link ). lambda : Parameter Proximal Newton’s Method. Default lambda=1e8 tau : (Alpha beta?) Newton’s Method, Default tau=0.5. Used control step size. lambda_spline : Smoothing parameter lambda. Default lambda_spline = 0 refers Newton’s Method without penalization. degree: Degree smoothing spline. Default setting degree=3L. degree=2L refers Smoothing quadratic spline. degree=3L refers Smoothing cubic spline. ord : Specify derivative penalize. Default setting ord=4. ord=4: Penalized second order derivative, suggest use using smoothing cubic spline. ord=3: Penalized first order derivative, suggest use using smoothing quadratic spline. penalizestop: delete","code":""},{"path":"/articles/Model_Parameters.html","id":"stopping-creteria-related-parameters","dir":"Articles","previous_headings":"1. Functions","what":"1.1.3 Stopping creteria related Parameters:","title":"Model Parameters","text":"tol: Convergence threshold. default threshold set tol=1e-6 iter.max: Maximum Iteration number, default iter.max=20L incre: define \\((l^{(m)}-l^{(m-1)})/(l^{(m)}-l^{(0)})\\) relative change log-partial likelihood, m denotes mth step algorithm. ’s smaller certain threshold, stop algorithm. tol variable determining convergence threshold. relch: define relative change log-partial likelihood \\((l^{(m)}-l^{(m-1)})/(l^{(m)})\\), makes easier converge. incre: method stop algorithm half Newton increment less threshold(tol defined previous argument?? correct??). fixedstep: might times stopping criteria working, thus, number steps set manually. Default value fixedstep = FALSE, true, stop iter.max","code":""},{"path":"/articles/Model_Parameters.html","id":"other-parameters","dir":"Articles","previous_headings":"1. Functions > 1.1.3 Stopping creteria related Parameters:","what":"1.1.4 Other Parameters:","title":"Model Parameters","text":"\"Breslow\": Breslow approximation. Detailed information found (add link) \"none: Don’t deal ties \"none\": Don’t Backtracking Linesearch. \"static\" : binary predictors extremely low frequency present, calculation second order derivative issues. case, Newton increment presents extreme values, leading huge bias. provided way limiting step size cases. Instead using Newton increment, use fixed value 1. method referred “static” function. Since moves slower, usually can achieve maximum likelihood estimator, leading biased estimation. \"dynamic\" : Backtracking Linesearch Newton Increment. Detail information found (Add link) parallel: Parallel computation, Default parallel=FALSE threads : Parallel computation parameter(number cores)Default threads=1L TIC_prox : calculating information criteria, might numerical issue(second order derivative, Hessian matrix approximate singular), thus proposed add small term diagonal. Default TIC_prox = FALSE ICLastOnly : calculate last information criteria TRUE. Default ICLastOnly=FALSE","code":""},{"path":"/articles/Model_Parameters.html","id":"coxtp-plot","dir":"Articles","previous_headings":"1. Functions","what":"1.2. coxtp.plot","title":"Model Parameters","text":"coxtp.plot(fit,IC=\"AIC\",coef,xlab=\"Time\",ylab=\"Hazard Ratio (log-scale)\") Function coxtp.plot created generate related hazard ratio plot result generated coxtp fit: Model fitted coxtp IC=“TIC”: Takeuchi information criterion (Insert link ) IC=“GIC”: Generalized information criterion (Insert link ) IC=“AIC”: Akakia information criterion (Insert link ) coef: variable needed plotted xlab: X axis label, default xlab=“Time” ylab: X axis label, default ylab=“Hazard Ratio (log-scale)”","code":""},{"path":"/articles/Model_Parameters.html","id":"coxtp-baseline","dir":"Articles","previous_headings":"1. Functions","what":"1.3. coxtp.baseline","title":"Model Parameters","text":"coxtp.baseline(fit, delta,z,time,strata=c()) fit: Model fitted coxtp delta: Event vector, vector containing 0 1 z: Covariate matrix time: Time vector, vector non-negative numeric value. strata: stratification group defined data. exist stratification group, please enter vector.","code":""},{"path":"/articles/Model_Parameters.html","id":"coxtp-predict","dir":"Articles","previous_headings":"1. Functions","what":"1.4 coxtp.predict","title":"Model Parameters","text":"coxtp.predict(fit,baseline,newdata=c(),strata=FALSE) fit: Model get coxtp baseline: Baseline estimation coxtp.baseline arbitary baseline entered newdata: New data vector strata: Whether stratification dataset, default FALSE.","code":""},{"path":[]},{"path":"/articles/Model_Parameters.html","id":"sim_data","dir":"Articles","previous_headings":"2. Data sets","what":"2.1 sim_data","title":"Model Parameters","text":"Example data surtvep 5000 observations 4 variables V1: Simulated covariate V1, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=1\\) V2: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=exp(-1.5*t)\\) event: Simulated event variable, Binary varible 0, 1 time: Simulated time variable, Continous variable non-negative value","code":""},{"path":"/articles/Model_Parameters.html","id":"sim_data_p5","dir":"Articles","previous_headings":"2. Data sets","what":"2.2 sim_data_p5","title":"Model Parameters","text":"Example data surtvep 5000 observations 7 variables: V1: Simulated covariate V1, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=1\\) V2: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=sin(3\\pi t/4)\\) V3: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=-1\\) V4: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=(t/3)**2exp(t/2)\\) V5: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=exp(-1.5t)\\) event: Simulated event variable, Binary varible 0, 1 } time: Simulated time variable, Continous variable non-negative value}","code":""},{"path":"/articles/Model_Parameters.html","id":"sim_data_p5_f5","dir":"Articles","previous_headings":"2. Data sets","what":"2.3 sim_data_p5_f5","title":"Model Parameters","text":"Example data surtvep 5000 observations 8 variables(strata): V1: Simulated covariate V1, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=1\\) V2: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=sin(3\\pi t/4)\\) V3: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=-1\\) V4: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=(t/3)**2exp(t/2)\\) V5: Simulated covariate V2, Binary variable 0, 1. True time-dependent function \\(\\beta(t)=exp(-1.5t)\\) event: Simulated event variable, Binary variable 0, 1 time: Simulated time variable, Continuous variable non-negative value facility: Simulated stratification variable. 5 levels","code":""},{"path":"/articles/reference.html","id":"related-paper","dir":"Articles","previous_headings":"","what":"Related Paper:","title":"Reference","text":"insert paper link ","code":""},{"path":"/articles/reference.html","id":"our-main-web","dir":"Articles","previous_headings":"","what":"Our main web","title":"Reference","text":"insert web link ","code":""},{"path":"/articles/surtvep.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction:","title":"Introduction to surtvep","text":"surtvep R package fitting penalized Newton’s method time-varying effects model using mAIC, TIC, GIC information criteria, particular span parameter using basis functions. Utilities carrying post-fitting visualization, summarization, inference also provided. tutorial introduce use surtvep example dataset.","code":""},{"path":"/articles/surtvep.html","id":"installation","dir":"Articles","previous_headings":"","what":"2. Installation:","title":"Introduction to surtvep","text":"","code":"#Install the package, need to install the devtools packages: require(\"devtools\") require(\"remotes\") remotes::install_github(\"UM-KevinHe/surtvep\", ref = \"Lingfeng_test\")  #To install with Vignettes: # install.packages(\"devtools\") # devtools::install_github(\"UM-KevinHe/surtvep\",build_vignettes =T)"},{"path":"/articles/surtvep.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"3. Quick Start","title":"Introduction to surtvep","text":"purpose section give users general sense package. briefly go main functions, basic operations outputs. section, users may better idea functions available, ones use, least seek help. First, load ‘surtvep’ package: main functions used package Newton’s method ‘coxtv’ Newton’s method combined penalization ‘coxtp’, demonstrate section. load set data created command loads input covariate matrix ‘z’, time--event outcome ‘time’ ‘event’ saved R data archive. saved data set simulation data set continuous outcomes. fit Newton’s method without penalization use basic call ‘coxtv’. ‘fit’ object class ‘coxtv’ contains relevant information fitted model use. encourage users extract components directly. Instead, various methods provided object plot enable us execute tasks elegantly.","code":"library(\"surtvep\") data(\"ExampleData\") z <- ExampleData$x time <- ExampleData$time event <- ExampleData$event fit <- coxtv(z = z, event = event, time=time)"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lingfeng Luo. Author. Wenbo Wu. Author. Xueting Tao. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Luo L, Wu W, Tao X (2022). surtvep: Cox Non-proportional Hazards model penalization. https://github.com/UM-KevinHe/surtvep, https://um-kevinhe.github.io/surtvep/.","code":"@Manual{,   title = {surtvep: Cox Non-proportional Hazards model with penalization},   author = {Lingfeng Luo and Wenbo Wu and Xueting Tao},   year = {2022},   note = {https://github.com/UM-KevinHe/surtvep, https://um-kevinhe.github.io/surtvep/}, }"},{"path":"/index.html","id":"surtvep","dir":"","previous_headings":"","what":"Cox Non-proportional Hazards model with penalization","title":"Cox Non-proportional Hazards model with penalization","text":"“surtvep” R package time-varying effects analysis large-scale time--event data, including Newton’s method, Proximal Newton’s method combination P-spline smoothing-spline. mAIC, TIC, GIC cross-validation provided choose penalization coefficient.","code":""},{"path":"/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started","title":"Cox Non-proportional Hazards model with penalization","text":"First can install ‘surtvep’ via: recommend start 01 introduction, explains general usage package terms data preprocessing, model training evaluation procedure. Large-scale time--event data derived national disease registries arise rapidly medical studies. Detecting accounting time-varying effects particularly important, time-varying effects already reported clinical literature. However, formal R packages estimating time-varying effect without pre-assuming time-dependent function. However, real dataset, get pre-assuming incorrect, estimation largely influenced assumption. Thus, decided develop time-varying model using spline terms penalization don’t need pre-assumption true time-dependent function implemented R. Following benefits packages: begin , traditional methods modeling time-varying survival models typically rely expanding original data repeated measurement format, , even moderate sample size, usually leads intractably large working dataset. Consequently, computational burden increases dramatically sample size grows, precluding evaluation time-varying effects large-scale studies, thus, propose computationally efficient Kronecker product-based proximal algorithm, enables us extend existing methods estimating time-varying effects time--event data large-scale context. Detailed information method found . Also, allowing parallel computing, packages handle moderate large sample size quite well compared current methods compare end page. Specifically, data analysis include number binary covariates near-zero variation (e.g., SEER prostate cancer data, 0.6% 716,553 patients tumors regional lymph nodes), associated observed information matrix Newton-type method may minimum eigenvalue close zero large condition number. Inverting nearly singular matrix numerically unstable corresponding Newton updates likely conned within small neighborhood initial value, causing estimates far optimal solutions. However, proposed Proximal-Newtown method handle problem quite well adding (describe edited Hessian matrix)","code":"#Install the package, need to install the devtools packages: install.packages(\"devtools\") require(\"remotes\") remotes::install_github(\"UM-KevinHe/surtvep\", ref = \"openmp\")  #To install with Vignettes: install.packages(\"devtools\") remotes::install_github(\"UM-KevinHe/surtvep\", ref = \"openmp\", build_vignettes =T)"},{"path":[]},{"path":[]},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage:","title":"Cox Non-proportional Hazards model with penalization","text":", using Simulation study included packages example","code":"library(surtvep)  #Load Simulation study sim_data=sim_data #Clean and create label and covariate matrix for the package: event=sim_data[,\"event\"] time=sim_data[,\"time\"] data=sim_data[,!colnames(sim_data) %in% c(\"event\",\"time\")]  #Fit the model(Time varying model without penalty)  fit <- coxtp(event = event, z = data, time = time) coxtp.plot(fit,coef=\"V1\")"},{"path":"/index.html","id":"datasets","dir":"","previous_headings":"","what":"Datasets","title":"Cox Non-proportional Hazards model with penalization","text":"SUPPORT dataset available “surtvep” package. following code load dataset form dataframe","code":"data(\"support\")"},{"path":"/index.html","id":"simulated-datasets","dir":"","previous_headings":"","what":"Simulated Datasets:","title":"Cox Non-proportional Hazards model with penalization","text":"","code":"<tr>     <td>simulN2kOP2Binary<\/td>     <td>100,000<\/td>     <td>     Dataset from simulation study in <a href=\"#references\">[12]<\/a>.     This is a discrete time dataset with 1000 possible event-times.     <\/td>     <td><a href=\"https://github.com/havakv/pycox/tree/master/pycox/simulations/discrete_logit_hazard.py\">simulN2kOP2Binary<\/a> <\/tr>"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cox Non-proportional Hazards model with penalization","text":"Note: package still early stages development, please don’t hesitate report problems may experience. package works R 4.1.0+. can install ‘surtvep’ via: recommand start tutorial, explains general usage package terms preprocessing, model training, penalziation parameter selection evalutaion procedure.","code":"#Install the package, need to install the devtools packages: install.packages(\"devtools\") require(\"remotes\") remotes::install_github(\"UM-KevinHe/surtvep\", ref = \"openmp\")  #To install with Vignettes: install.packages(\"devtools\") remotes::install_github(\"UM-KevinHe/surtvep\", ref = \"openmp\", build_vignettes =T)"},{"path":"/index.html","id":"detailed-tutorial","dir":"","previous_headings":"","what":"Detailed tutorial","title":"Cox Non-proportional Hazards model with penalization","text":"detailed tutorial model paramter explaination, please go ","code":""},{"path":"/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help:","title":"Cox Non-proportional Hazards model with penalization","text":"encounter problems bugs, please contact us : lfluo@umich.edu, xuetao@umich.edu","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Cox Non-proportional Hazards model with penalization","text":"[1] Wenbo Wu, Jeremy M G Taylor, Andrew F Brouwer, Lingfeng Luo, Jian Kang, Hui Jiang Kevin . Scalable proximal Methods cause-specific hazard modeling time-varying coefficients. Lifetime Data Analysis, 28(2):194-218, 2022. [paper]","code":""},{"path":"/reference/coxtp.base.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox Non-proportional Hazards model: — coxtp.base","title":"Cox Non-proportional Hazards model: — coxtp.base","text":"Descritpion (...)","code":""},{"path":"/reference/coxtp.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox Non-proportional Hazards model: — coxtp.base","text":"","code":"coxtp.base(   formula,   data,   spline = \"Smooth-spline\",   nsplines = 8,   ties = \"Breslow\",   control,   ... )"},{"path":"/reference/coxtp.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox Non-proportional Hazards model: — coxtp.base","text":"spline spline term Penalized Newton's Method(Add section Number related paper). Default setting spline=\"Smooth-spline\" nsplines Number base functions B-splines, default 8. ties Ways deal ties, default ties=\"Breslow\": event event vector, vector containing 0 1 z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector. tol Convergence threshold. default threshold set tol=1e-6 iter.max Maximum Iteration number, default iter.max=20L method Selecting Method used, default method=\"Newton\" lambda Parameter Proximal Newton's Method. Default lambda=1e8 btr Backtracking line search approach, default btr=\"static\": tau (Alpha beta?) Newton's Method, Default tau=0.5. Used control step size. stop Stopping rule, default stop=\"ratch\": parallel Parallel computation, Default parallel=FALSE threads Parallel computation parameter(number cores)Default threads=1L degree Degree smoothing spline. Default setting degree=3L. ord Specify derivative penalize. Default setting ord=4. fixedstep might times stopping criteria working, thus, number steps set manually. Default value fixedstep = FALSE, true, stop iter.max","code":""},{"path":"/reference/coxtp.base.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cox Non-proportional Hazards model: — coxtp.base","text":"put link wesite()...","code":""},{"path":"/reference/coxtp.baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating Baseline hazard using the result from coxtp() — coxtp.baseline","title":"Calculating Baseline hazard using the result from coxtp() — coxtp.baseline","text":"Calculating Baseline hazard using result coxtp()","code":""},{"path":"/reference/coxtp.baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating Baseline hazard using the result from coxtp() — coxtp.baseline","text":"","code":"coxtp.baseline(fit, delta, z, time, strata = c())"},{"path":"/reference/coxtp.baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating Baseline hazard using the result from coxtp() — coxtp.baseline","text":"fit Model get coxtp delta event vector, vector containing 0 1 z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector.","code":""},{"path":"/reference/coxtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox Non-proportional Hazards model with penalization: — coxtp","title":"Cox Non-proportional Hazards model with penalization: — coxtp","text":"Descritpion (...)","code":""},{"path":"/reference/coxtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox Non-proportional Hazards model with penalization: — coxtp","text":"","code":"coxtp(   event,   z,   time,   strata = c(),   spline = \"Smooth-spline\",   nsplines = 8,   ties = \"Breslow\",   tol = 1e-09,   iter.max = 20L,   method = \"ProxN\",   lambda = 1e+08,   btr = \"dynamic\",   tau = 0.5,   stop = \"ratch\",   parallel = FALSE,   threads = 1L,   degree = 3L,   TIC_prox = FALSE,   lambda_spline = 0,   ord = 4,   fixedstep = FALSE,   ICLastOnly = TRUE )"},{"path":"/reference/coxtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox Non-proportional Hazards model with penalization: — coxtp","text":"event event vector, vector containing 0 1 z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector. spline spline term Penalized Newton's Method(Add section Number related paper). Default setting spline=\"Smooth-spline\" nsplines Number base functions B-splines, default 8. ties Ways deal ties, default ties=\"Breslow\": tol Convergence threshold. default threshold set tol=1e-6 iter.max Maximum Iteration number, default iter.max=20L method Selecting Method used, default method=\"Newton\" lambda Parameter Proximal Newton's Method. Default lambda=1e8 btr Backtracking line search approach, default btr=\"static\": tau (Alpha beta?) Newton's Method, Default tau=0.5. Used control step size. stop Stopping rule, default stop=\"ratch\": parallel Parallel computation, Default parallel=FALSE threads Parallel computation parameter(number cores)Default threads=1L degree Degree smoothing spline. Default setting degree=3L. TIC_prox calculating information criteria, might numerical issue(second order derivative, Hessian matrix approximate singular), thus proposed add small term diagonal. Default TIC_prox = FALSE lambda_spline Smoothing parameter lambda. Default lambda_spline = 0 refers Newton's Method without penalization. ord Specify derivative penalize. Default setting ord=4. fixedstep might times stopping criteria working, thus, number steps set manually. Default value fixedstep = FALSE, true, stop iter.max ICLastOnly calculate last information criteria TRUE. Default ICLastOnly=FALSE","code":""},{"path":"/reference/coxtp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cox Non-proportional Hazards model with penalization: — coxtp","text":"put link wesite()...","code":""},{"path":"/reference/coxtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cox Non-proportional Hazards model with penalization: — coxtp","text":"","code":"data(ExampleData) z <- ExampleData$x time  <- ExampleData$time event <- ExampleData$event  lambda.spline  = c(0,1) fit   <- coxtp(event = event, z = z, time = time, lambda_spline=lambda.spline) #> Iter 1: Obj fun = -3.7217224; Stopping crit = 1.0000000e+00; #> Iter 2: Obj fun = -3.7146358; Stopping crit = 2.4100909e-02; #> Iter 3: Obj fun = -3.7146170; Stopping crit = 6.4176474e-05; #> Iter 4: Obj fun = -3.7146170; Stopping crit = 7.3622458e-10; #> Iter 1: Obj fun = -3.7230890; Stopping crit = 1.0000000e+00; #> Iter 2: Obj fun = -3.7159272; Stopping crit = 2.4464280e-02; #> Iter 3: Obj fun = -3.7158723; Stopping crit = 1.8749735e-04; #> Iter 4: Obj fun = -3.7158722; Stopping crit = 3.4945884e-07; #> Iter 5: Obj fun = -3.7158722; Stopping crit = 1.6607763e-12;"},{"path":"/reference/coxtp.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from coxtp() function — coxtp.plot","title":"Plotting result from coxtp() function — coxtp.plot","text":"Plotting result coxtp() function","code":""},{"path":"/reference/coxtp.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from coxtp() function — coxtp.plot","text":"","code":"coxtp.plot(fit, IC = \"AIC\", coef)"},{"path":"/reference/coxtp.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from coxtp() function — coxtp.plot","text":"fit Model get coxtp IC Creteria selected plotting coef variable needed plotted","code":""},{"path":"/reference/coxtp.predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — coxtp.predict","title":"Title — coxtp.predict","text":"Title","code":""},{"path":"/reference/coxtp.predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — coxtp.predict","text":"","code":"coxtp.predict(fit, baseline, newdata = c(), strata = FALSE, out_seq = NULL)"},{"path":"/reference/coxtp.predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — coxtp.predict","text":"fit Model get coxtp baseline Baseline estimation coxtp.baseline arbitary baseline entered newdata New data vector strata Whether stratification dataset, default FALSE. out_seq Output time sequence. Default out_seq=NULL. default, output time sequence according input fit","code":""},{"path":"/reference/coxtv.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox Non-proportional Hazards model: — coxtv","title":"Cox Non-proportional Hazards model: — coxtv","text":"Descritpion (...)","code":""},{"path":"/reference/coxtv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox Non-proportional Hazards model: — coxtv","text":"","code":"coxtv(   event,   z,   time,   strata = c(),   spline = \"P-spline\",   nsplines = 8,   ties = \"Breslow\",   control,   ... )"},{"path":"/reference/coxtv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox Non-proportional Hazards model: — coxtv","text":"event event vector, vector containing 0 1 z Covariate matrix time Time vector, vector non-negative numeric value strata stratification group defined data. exist stratification group, please enter vector. spline spline term Penalized Newton's Method(Add section Number related paper). Default setting spline=\"Smooth-spline\" nsplines Number base functions B-splines, default 8. ties Ways deal ties, default ties=\"Breslow\": tol Convergence threshold. default threshold set tol=1e-6 iter.max Maximum Iteration number, default iter.max=20L method Selecting Method used, default method=\"Newton\" lambda Parameter Proximal Newton's Method. Default lambda=1e8 btr Backtracking line search approach, default btr=\"static\": tau (Alpha beta?) Newton's Method, Default tau=0.5. Used control step size. stop Stopping rule, default stop=\"ratch\": parallel Parallel computation, Default parallel=FALSE threads Parallel computation parameter(number cores)Default threads=1L degree Degree smoothing spline. Default setting degree=3L. ord Specify derivative penalize. Default setting ord=4. fixedstep might times stopping criteria working, thus, number steps set manually. Default value fixedstep = FALSE, true, stop iter.max","code":""},{"path":"/reference/coxtv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cox Non-proportional Hazards model: — coxtv","text":"put link wesite()...","code":""},{"path":"/reference/coxtv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cox Non-proportional Hazards model: — coxtv","text":"","code":"data(ExampleData) z <- ExampleData$x time <- ExampleData$time event <- ExampleData$event fit <- coxtv(event = event, z = z, time = time) #> Iter 1: Obj fun = -3.7217224; Stopping crit = 2.6572022e-01; #> Iter 2: Obj fun = -3.7146358; Stopping crit = 6.8664497e-03; #> Iter 3: Obj fun = -3.7146170; Stopping crit = 1.8829926e-05; #> Iter 4: Obj fun = -3.7146170; Stopping crit = 2.1649876e-10;"},{"path":"/reference/ExampleData.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Dataset — ExampleData","title":"Example Dataset — ExampleData","text":"Example data surtvep 4000 observations 2 variables:","code":""},{"path":"/reference/ExampleData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Dataset — ExampleData","text":"","code":"ExampleData"},{"path":"/reference/ExampleData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Dataset — ExampleData","text":"data.frame wit V1 Simulated covariate V1, Continuous variable. True time-dependent function b(t)=1 V2 Simulated covariate V2, Continuous variable. True time-dependent function b(t)=sin(3pix/4) event Simulated event variable, Binary varible 0, 1 time Simulated time variable, Continous variable non-negative value","code":""},{"path":"/reference/ExampleData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example Dataset — ExampleData","text":"simulated data set containing two 2 variables.","code":""},{"path":"/reference/plot.coxtp.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from coxtp() function — plot.coxtp.all","title":"Plotting result from coxtp() function — plot.coxtp.all","text":"Plotting result coxtp() function","code":""},{"path":"/reference/plot.coxtp.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from coxtp() function — plot.coxtp.all","text":"","code":"# S3 method for coxtp.all plot(   model,   IC = \"AIC\",   times,   CI = TRUE,   level = 0.95,   exponentiate = FALSE,   xlab,   ylab,   xlim,   ylim,   save = FALSE,   allinone = FALSE,   title,   linetype,   fill,   color,   labels,   expand,   ... )"},{"path":"/reference/plot.coxtp.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from coxtp() function — plot.coxtp.all","text":"IC Criteria selected plot. Default \"AIC\", uses AIC select tunning parameter. times time scale plot CI argument controls confidence interval plot. 'CI' = TRUE, confidence interval plotted. level confidence level. fit Fitted \"coxtp\" model object main function \"coxtp\".","code":""},{"path":"/reference/plot.coxtp.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting result from coxtp() function — plot.coxtp.all","text":"","code":"data(\"ExampleData\") z     <- ExampleData$x time  <- ExampleData$time event <- ExampleData$event model   <- coxtp(event = event, z = z, time = time, lambda_spline = c(1)) #> Iter 1: Obj fun = -3.7230890; Stopping crit = 1.0000000e+00; #> Iter 2: Obj fun = -3.7159272; Stopping crit = 2.4464280e-02; #> Iter 3: Obj fun = -3.7158723; Stopping crit = 1.8749735e-04; #> Iter 4: Obj fun = -3.7158722; Stopping crit = 3.4945884e-07; #> Iter 5: Obj fun = -3.7158722; Stopping crit = 1.6607763e-12; plot(model, IC = \"AIC\", allinone = TRUE) #> Warning: package 'ggplot2' was built under R version 4.1.3"},{"path":"/reference/plot.coxtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from coxtp() function — plot.coxtp","title":"Plotting result from coxtp() function — plot.coxtp","text":"Plotting result coxtp() function","code":""},{"path":"/reference/plot.coxtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from coxtp() function — plot.coxtp","text":"","code":"# S3 method for coxtp plot(   model,   IC = \"AIC\",   times,   CI = TRUE,   level = 0.95,   exponentiate = FALSE,   xlab,   ylab,   xlim,   ylim,   save = FALSE,   allinone = FALSE,   title,   linetype,   fill,   color,   labels,   expand,   ... )"},{"path":"/reference/plot.coxtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from coxtp() function — plot.coxtp","text":"IC Criteria selected plot. Default \"AIC\", uses AIC select tunning parameter. times time scale plot CI argument controls confidence interval plot. 'CI' = TRUE, confidence interval plotted. level confidence level. fit Fitted \"coxtp\" model object main function \"coxtp\".","code":""},{"path":"/reference/plot.coxtp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting result from coxtp() function — plot.coxtp","text":"","code":"data(\"ExampleData\") #> Warning: data set 'ExampleData' not found z     <- ExampleData$x #> Error in eval(expr, envir, enclos): object 'ExampleData' not found time  <- ExampleData$time #> Error in eval(expr, envir, enclos): object 'ExampleData' not found event <- ExampleData$event #> Error in eval(expr, envir, enclos): object 'ExampleData' not found model   <- coxtp(event = event, z = z, lambda_spline = c(1)) #> Error in coxtp(event = event, z = z, lambda_spline = c(1)): argument \"time\" is missing, with no default plot(model, IC = \"AIC\", allinone = TRUE) #> Error in plot(model, IC = \"AIC\", allinone = TRUE): object 'model' not found"},{"path":"/reference/plot.coxtv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from coxtp() function — plot.coxtv","title":"Plotting result from coxtp() function — plot.coxtv","text":"Plotting result coxtp() function","code":""},{"path":"/reference/plot.coxtv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from coxtp() function — plot.coxtv","text":"","code":"# S3 method for coxtv plot(   fit,   times,   parm,   CI = TRUE,   level = 0.95,   exponentiate = FALSE,   xlab,   ylab,   xlim,   ylim,   save = FALSE,   allinone = FALSE,   title,   linetype,   fill,   color,   labels,   expand,   ... )"},{"path":"/reference/plot.coxtv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from coxtp() function — plot.coxtv","text":"fit Model get coxtv","code":""},{"path":"/reference/plot.coxtv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting result from coxtp() function — plot.coxtv","text":"","code":"data(ExampleData) z <- ExampleData$x time <- ExampleData$time event <- ExampleData$event fit <- coxtv(event = event, z = z, time = time) #> Iter 1: Obj fun = -3.7217224; Stopping crit = 2.6572022e-01; #> Iter 2: Obj fun = -3.7146358; Stopping crit = 6.8664497e-03; #> Iter 3: Obj fun = -3.7146170; Stopping crit = 1.8829926e-05; #> Iter 4: Obj fun = -3.7146170; Stopping crit = 2.1649876e-10; plot(fit)"},{"path":"/reference/sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data for surtvep with 5000 observations of 4 variables: — sim_data","title":"Example data for surtvep with 5000 observations of 4 variables: — sim_data","text":"Example data surtvep 5000 observations 4 variables:","code":""},{"path":"/reference/sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data for surtvep with 5000 observations of 4 variables: — sim_data","text":"","code":"sim_data"},{"path":"/reference/sim_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data for surtvep with 5000 observations of 4 variables: — sim_data","text":"data.frame V1 Simulated covariate V1, Binary variable 0, 1. True time-dependent function b(t)=1 V2 Simulated covariate V2, Binary variable 0, 1. True time-dependent function b(t)=exp(-1.5*t) event Simulated event variable, Binary varible 0, 1 time Simulated time variable, Continous variable non-negative value","code":""},{"path":"/reference/sim_data_p5.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data for surtvep with 5000 observations of 7 variables: — sim_data_p5","title":"Example data for surtvep with 5000 observations of 7 variables: — sim_data_p5","text":"Example data surtvep 5000 observations 7 variables:","code":""},{"path":"/reference/sim_data_p5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data for surtvep with 5000 observations of 7 variables: — sim_data_p5","text":"","code":"sim_data_p5"},{"path":"/reference/sim_data_p5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data for surtvep with 5000 observations of 7 variables: — sim_data_p5","text":"data.frame 5000 observations 7 variables:","code":""},{"path":"/reference/sim_data_p5_f5.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data for surtvep with 5000 observations of 8 variables(With strata): — sim_data_p5_f5","title":"Example data for surtvep with 5000 observations of 8 variables(With strata): — sim_data_p5_f5","text":"Example data surtvep 5000 observations 8 variables(strata):","code":""},{"path":"/reference/sim_data_p5_f5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data for surtvep with 5000 observations of 8 variables(With strata): — sim_data_p5_f5","text":"","code":"sim_data_p5_f5"},{"path":"/reference/sim_data_p5_f5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data for surtvep with 5000 observations of 8 variables(With strata): — sim_data_p5_f5","text":"data.frame","code":""},{"path":"/reference/surtvier.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting result from surtvier() function — surtvier.plot","title":"Plotting result from surtvier() function — surtvier.plot","text":"Plotting result surtvier() function","code":""},{"path":"/reference/surtvier.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting result from surtvier() function — surtvier.plot","text":"","code":"surtvier.plot(fit, coef)"},{"path":"/reference/surtvier.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting result from surtvier() function — surtvier.plot","text":"fit Model get coxtp coef variable needed plotted IC Creteria selected plotting","code":""}]
